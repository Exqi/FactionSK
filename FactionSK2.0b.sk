options:
	#World where you can claim lands
	W: "P" or "insert-another-world-if-you-need"
	I: jungle door block or birch door block or dark oak door block or acacia door block or oak door block or acacia fence gate or birch fence gate or jungle fence gate or dark oak fence gate or oak fence gate or spruce fence gate or enchantment table or furnace or brewing stand or beacon or _lever or spruce door block or oak trapdoor or hopper or stone button or wooden button or dispenser or _anvil or trapped_chest
	stash: chest or trapped_chest
	#Use chat system: true or false
	ChatSystem: true
	#Factions prefix, yes double quotes
	Prefix: ""&6[&9Forbidden HCF&6]""
	#
	#
	fhome-delay: 10
	#
	# DTR STUFF
	#
	#the max amount of dtr a faction may have
	max-dtr: 5.5
	#the minimun amount of dtr
	min-dtr: -5.5
	#how much a player increments the max dtr of a faction
	player-dtr: 0.51
	#max dtr of a faction with 1 player
	solo-faction: 1.01
	#dtr freeze in seconds:
	dtr-freeze: 3600
	#you know..
	kick-penalty: 0.51
	#you know..
	death-dtr: 1.0
	#How much a faction wins per minute and per player
	minute-dtr: 0.01
	#
	#LAND STUFF
	#
	faction-land-max: 36
	# How much land a faction gets per member
	land-per-player: 6
	#should players be able to claim on WG regions?  false=no / true=yes
	wgchek: false
	#
	#
	ally-fire: false
	faction-fire: false
	truce-fire: false
	#
	#
	max-ally: 1
	#Max-truce
	max-truce: 0
	#can ally place block in your land?
	ally-break: "no"
	#can ally break block in your land?
	ally-place: "no"
	#can interact with your stuff? Chests, pistions, restones stuff, etc?
	ally-interact: "no"
	#Can an ally sethome in your land?
	ally-sethome: "no"
	#
	ally-chest: "no"
	#
	fac-maxplayers: 30

#Done
#Tested
function FactionDtr(F:text):
	set {_dtr} to yaml value "Faction.%{_F}%.dtr" from file "./Factions/Factions.yml"
	if {_dtr} > 0:
		set yaml value "Faction.%{_F}%.raideable" from file "./Factions/Factions.yml" to false
	else:
		set yaml value "Faction.%{_F}%.raideable" from file "./Factions/Factions.yml" to true

#Done?
function FactionTag(l: location):
	loop all players:
		if loop-player has the permission "admin.root":
			make all players see loop-player's prefix as "&6[&cOwner&6]&9 "
		else if loop-player has the permission "mod.imforbi":	
			#set prefix of player to "[MOD]&9 "
			make all players see loop-player's prefix as "&6[&3MOD&6]&9 "
		else:	
			set {_F} to yaml value "Player.%uuid of loop-player%.faction" from file "./Factions/PlayerData.yml"
			#TAG FACTIONS
			make all players see loop-player's prefix as "&c"
			if {_F} isn't "wilder":
				set {_players::*} to yaml list "Faction.%{_F}%.players" from file "./Factions/Factions.yml"
				loop {_players::*}:
					make player from uuid loop-value-2 see loop-value-1's prefix as "&2"
				set {_ally::*} to yaml list "Faction.%{_F}%.relations.ally" from file "./Factions/Factions.yml"
				loop {_ally::*}:
					clear {_players::*}
					set {_players::*} to yaml list "Faction.%loop-value-2%.players" from file "./Factions/Factions.yml"
					loop {_players::*}:
						make player from uuid loop-value-3 see loop-value-1's prefix as "&d"

#Done
#Tested
function FactionShow(F: text, p: player):
	set {_owner} to yaml value "Faction.%{_F}%.owner" from file "./Factions/Factions.yml"
	set {_owner} to yaml value "uuid2player.%{_owner}%" from file "./Factions/uuid2player.yml"
	set {_offline} to 0
	set {_online} to 0
	set {_lands} to 0
	set {_players::*} to yaml list "Faction.%{_F}%.players" from file "./Factions/Factions.yml"
	set {_players} to size of {_players::*}
	loop {_players::*}:
		set {_check} to loop-value
		set {_check} to player from uuid {_check}
		set {_name} to yaml value "uuid2player.%loop-value%" from file "./Factions/uuid2player.yml"
		if {_check} is online:
			set {_online} to {_online}+1
			if {_jugadoresonline} isn't set:
				set {_jugadoresonline} to "&2%{_name}%"
			else:
				set {_jugadoresonline} to "%{_jugadoresonline}%&f, &2%{_name}%"
		else:
			if {_jugadoresonline} isn't set:
				set {_jugadoresonline} to "&c%{_name}%"
			else:
				set {_jugadoresonline} to "%{_jugadoresonline}%&f, &c%{_name}%"
					
		set {_offline} to {_offline}+1
	#ACTUAL DTR
	set {_dtr} to yaml value "Faction.%{_F}%.dtr" from file "./Factions/Factions.yml"
	#MAX DTR
	if {_players} > 1:
		set {_maxfactiondtr} to ({_players} - 1) * {@player-dtr} + {@solo-faction}
	else:
		set {_maxfactiondtr} to {@solo-faction}
	#HOME
	set {_home::*} to yaml nodes "Faction.%{_F}%.home" from file "./Factions/Factions.yml"
	if "%{_home::*}%" isn't "<none>":
		set {_x} to yaml value "Faction.%{_F}%.home.x" from file "./Factions/Factions.yml"
		set {_y} to yaml value "Faction.%{_F}%.home.y" from file "./Factions/Factions.yml"
		set {_z} to yaml value "Faction.%{_F}%.home.z" from file "./Factions/Factions.yml"
		set {_home} to "X: %{_x}% , Y: %{_y}% , Z: %{_z}%"
	else:
		set {_home} to "No home"
	#Freeze
	set {_unix} to unix time
	set {_freeze} to yaml value "Faction.%{_F}%.freeze" from file "./Factions/Factions.yml"
	if {_freeze} > {_unix}:
		set {_until} to {_freeze}-{_unix}
		set {_until} to {_until}/60
		set {_icono} to ""
		set {_freeze} to "Yes"
	else:
		set {_freeze} to "no"
		set {_icono} to "&2?"
	#LANDS
	set {_lands::*} to yaml list "Faction.%{_F}%.lands" from file "./Factions/Factions.yml"
	set {_lands} to size of {_lands::*} 
	set {_maxlands} to {_players}*{@land-per-player}
	if {_maxlands}>{@faction-land-max}:
		set {_maxlands} to {@faction-land-max}
	set {_ally::*} to yaml list "Faction.%{_F}%.relations.ally" from file "./Factions/Factions.yml"
	loop {_ally::*}:
		if {_ally} isn't set:
			set {_ally} to "&2%loop-value-1%"
		else:
			set {_ally} to "&2%{_ally}%&f, &2%loop-value-1%"
	set {_truce::*} to yaml list "Faction.%{_F}%.relations.truce" from file "./Factions/Factions.yml"
	loop {_truce::*}:
		if {_truce} isn't set:
			set {_truce} to "&2%loop-value-1%"
		else:
			set {_truce} to "&2%{_truce}%&f, &2%loop-value-1%"

	send "&6----------&9ForbiddenHCF&6----------" to {_p}
	send "&9Faction: &b%{_F}%   &9Owner: &c%{_owner}%" to {_p}
	#send "" to {_p}
	send "&9Players: &a%{_online}% &8/ &c%{_offline}%" to {_p}
	send "&9DTR: &2%{_icono}%&a%{_dtr}%&8 / &c%{_maxfactiondtr}%" to {_p}
	send "&9Faction Home: &b%{_home}%" to {_p}
	send "&9Land: &a%{_lands}% &8/ &c%{_maxlands}%" to {_p}
	if {_freeze} is "Yes":
		send "&9DTR Freeze: &b%{_until}% Minutes" to {_p}
	else:
		send "&9&lDTR Freeze: &bNop" to {_p}
	send "&9Ally: &b%{_ally}%" to {_p}
	#send "&9Truce: &b%{_truce}%" to {_p}
	send "&9Players: &2%{_jugadoresonline}%" to {_p}
	send "&6--------------------------------" to {_p}

command f [<text>] [<text>] [<text>] [<text>]:
	trigger:
#Done			
#Tested
		if arg-1 is "create":
			set {_faction} to yaml value "Player.%uuid of player%.faction" from file "./Factions/PlayerData.yml"
			if "%{_faction}%" isn't "wilder":
				send "%{@Prefix}% &7You are alredy in a faction"
				stop
			else:
				if arg-2 is set:
					if arg-2 contains "WarZone":
						stop
					set {_l} to length of the arg-2
					if {_l} is less than 4:
						send "%{@Prefix}% &7The faction name needs at leat 3 characters"
						stop
					if {_l} is more than 13:
						send "%{@Prefix}% &7The faction name can't have more than 13 characters"
						stop
					else:
						set {_list::*} to yaml nodes "Faction" from file "./Factions/Factions.yml"
						if "%{_list::*}%" contains "%arg-2%":
							send "%{@Prefix}% &7There is a faction named: &c%arg-2%"
							stop
						else:
							set yaml value "Faction.%arg-2%.owner" from file "./Factions/Factions.yml" to "%uuid of player%"
							set yaml value "Faction.%arg-2%.mods" from file "./Factions/Factions.yml" to "%uuid of player%"
							set yaml value "Faction.%arg-2%.dtr" from file "./Factions/Factions.yml" to 0
							set yaml value "Faction.%arg-2%.raideable" from file "./Factions/Factions.yml" to false							
							set yaml value "Player.%uuid of player%.faction" from file "./Factions/PlayerData.yml" to "%arg-2%"
							set yaml value "Faction.%arg-2%.freeze"  from file "./Factions/Factions.yml" to 0
							add "%uuid of player%" to yaml list "Faction.%arg-2%.players" from file "./Factions/Factions.yml"
							add "%uuid of player%" to yaml list "Faction.%arg-2%.officers" from file "./Factions/Factions.yml"	
							add "%uuid of player%" to yaml list "Faction.%arg-2%.mods" from file "./Factions/Factions.yml"	
							send "%{@Prefix}% &7Faction made: %arg-2%"
							broadcast "%{@Prefix}% &c%player%&7 made the faction &c%arg-2%"
							FactionTag(player's location)
							stop
				else:
					send "%{@Prefix}% &7The faction name can't be empty"
					stop
#Done			
#Tested
		if arg-1 is "invite":
			set {_F} to yaml value "Player.%uuid of player%.faction" from file "./Factions/PlayerData.yml"
			if "%{_F}%" contains "wilder":
				send "%{@Prefix}% &7You need a faction to use this command"
				stop
			if arg-2 is player:
				send "%{@Prefix}% &7You can't invite your self to a faction."
				stop	
			else:			
				set {_list::*} to yaml list "Faction.%{_F}%.players" from file "./Factions/Factions.yml"
				if size of {_list::*} >= {@fac-maxplayers}:
					send "%{@Prefix}% &7Your faction reached the max amount of player per faction"
					stop
				set {_mods::*} to yaml list "Faction.%{_F}%.mods" from file "./Factions/Factions.yml"
				if  "%{_list::*}%" contains "%uuid of player%":
					if arg-2 is set:
						set {_l} to length of the arg-2
						if {_l} is more than 16:
							send "%{@Prefix}% &7Incorrect player name"
							stop
						else:
							if arg-2 parsed as player is online:
								set {_p} to uuid of arg-2 parsed as player
								set {_faction} to yaml value "Player.%{_p}%.faction" from file "./Factions/PlayerData.yml"
								if "%{_faction}%" isn't "wilder":
									send "%{@Prefix}% &c%arg-2% &7is already in a faction"
									stop
								else:
									send "%{@Prefix}% &c%player% &7invites you to join &c%{_F}%" to player from uuid {_p}
									send "%{@Prefix}% &7Use &a/f join &c%player% &7to join " to player from uuid {_p}
									add "%{_F}%" to yaml list "Player.%{_p}%.invitaciones" from file "./Factions/PlayerData.yml"
									send "%{@Prefix}% &7You invited &c%arg-2% &7to join your faction"
									stop
							else:
								send "%{@Prefix}% &7The player must be online"
								stop
					else:
						send "%{@Prefix}% &7You must specify a player"
						stop
				else:
					send "%{@Prefix}% &7Only mods can invite other players to the faction"
					stop
#Done
#tested
		if arg-1 is "deinvite":
			set {_F} to yaml value "Player.%uuid of player%.faction" from file "./Factions/PlayerData.yml"
			if "%{_F}%" contains "wilder":
				send "%{@Prefix}% &7You need a faction to use this command"
				stop
			else:
				set {_mods::*} to yaml list "Faction.%{_F}%.mods" from file "./Factions/Factions.yml"
				if "%{_mods::*}%" contains "%uuid of player%":
					if arg-2 is set:
						set {_l} to length of the arg-2
						if {_l} is more than 16:
							send "%{@Prefix}% &7Incorrect player name"
							stop
						else:
							if arg-2 parsed as player is online:
								set {_p} to uuid of arg-2 parsed as player
								set {_invitaciones::*} to yaml list "Player.%{_p}%.invitaciones" from file "./Factions/PlayerData.yml"
								if "%{_invitaciones::*}%" contains "%{_F}%":
									send "%{@Prefix}% &7You deinvited &c%arg-2%" to player
									remove "%{_F}%" from yaml list "Player.%{_p}%.invitaciones" from file "./Factions/PlayerData.yml"
									stop
								else:
									send "%{@Prefix}%&c%arg-2% &7wasn't invited to your faction" to player
									stop
							else:
								send "%{@Prefix}% &7The player must be online"
								stop
					else:
						send "%{@Prefix}% &7You must specify a player"
						stop
				else:
					send "%{@Prefix}% &7Only mods can deinvite other players to the faction"
					stop
#Done
#tested
		if arg-1 is "join":
			set {_F} to yaml value "Player.%uuid of player%.faction" from file "./Factions/PlayerData.yml"
			if "%{_F}%" isn't "wilder":
				send "%{@Prefix}% &7You are already in a faction"
				stop
			else:
				if arg-2 is set:
					set {_l} to length of the arg-2
					if {_l} is more than 16:
						send "%{@Prefix}% &7The name must contain at least 3 characters"
						stop
					else:
						if arg-2 parsed as player is online:
							set {_p} to uuid of arg-2 parsed as player
							set {_F} to yaml value "Player.%{_p}%.faction" from file "./Factions/PlayerData.yml"
						else:
							set {_F} to arg-2	
						set {_invitaciones::*} to yaml list "Player.%uuid of player%.invitaciones" from file "./Factions/PlayerData.yml"
						if "%{_invitaciones::*}%" contains "%{_F}%":
							set {_list::*} to yaml list "Faction.%{_F}%.players" from file "./Factions/Factions.yml"
							if size of {_list::*} >= {@fac-maxplayers}:
								send "%{@Prefix}% &7That faction reached the max amount of player per faction"
								stop
							set yaml value "Player.%uuid of player%.faction" from file "./Factions/PlayerData.yml" to "%{_F}%"
							add "%uuid of player%" to yaml list "Faction.%{_F}%.players" from file "./Factions/Factions.yml"	
							
							loop {_list::*}:
								send "%{@Prefix}% &c%player% &7joined the faction" to player from uuid loop-value
							send "%{@Prefix}% &7You are now part of the faction"
							remove "%{_F}%" from yaml list "Player.%uuid of player%.invitaciones" from file "./Factions/PlayerData.yml"
							FactionTag(player's location)
							stop
						else:
							send "%{@Prefix}% &c%arg-2% &7didn't invted you to &c%{_F}%"
							stop
				else:
					send "%{@Prefix}% &7You must specify a player name or a faction"
					stop
#Done
#tested
		if arg-1 is "unclaim":
			set {_F} to yaml value "Player.%uuid of player%.faction" from file "./Factions/PlayerData.yml"
			if "%{_F}%" contains "wilder":
				send "%{@Prefix}% &7You need a faction to use this command"
				stop
			else:	
				set {_mods::*} to yaml list "Faction.%{_F}%.mods" from file "./Factions/Factions.yml"
				if "%{_mods::*}%" contains "%uuid of player%":
					set {_chunk} to yaml value "Chunks.%chunk at player's location%.owner" from file "./Factions/chunks.yml"
					if "%{_chunk}%" is "%{_F}%":
						delete yaml nodes "Chunks.%chunk at player's location%" from file "./Factions/chunks.yml"
						remove "%chunk at player's location%" from yaml list "Faction.%{_F}%.lands" from file "./Factions/Factions.yml"
						send "%{@Prefix}% &7You unclaimed this chunk"
						stop
					else:
						send "%{@Prefix}% &7You can only use this command on your land"
						stop
				else:
					send "%{@Prefix}% &7You must be a mod to unclaim"
					stop
#Done
#Tested
		if arg-1 is "claim":
			if player's world is {@W}:
				set {_F} to yaml value "Player.%uuid of player%.faction" from file "./Factions/PlayerData.yml"
				if "%{_F}%" contains "wilder":
					send "%{@Prefix}% &7You need a faction to use this command"
					stop
				else:	
					set {_mods::*} to yaml list "Faction.%{_F}%.mods" from file "./Factions/Factions.yml"
					if "%{_mods::*}%" contains "%uuid of player%":
						set {_players} to 0
						set {_list::*} to yaml list "Faction.%{_F}%.players" from file "./Factions/Factions.yml"
						set {_maxlands} to size of {_list::*}*{@land-per-player}
						if {_maxlands} is greater than {@faction-land-max}:
							set {_maxlands} to {@faction-land-max}
						set {_lands::*} to yaml list "Faction.%{_F}%.lands" from file "./Factions/Factions.yml"
						set {_landcount} to size of {_lands::*}
						if {_landcount} >= {_maxlands}:
							send  "%{@Prefix}% &7You can't claim more lands, you may need more players or you reached the max amount of lands per factions"
							stop
						if {@wgchek} is false:
							set {_region} to "%region at player%"
							if {_region} isn't "<none>":
								send  "%{@Prefix}% &7You can't claim on this region!"
								stop
						#If I found an enemy land to close to the current chunk, I will stop the claim asap.
						set {_protectedchunks::*} to yaml nodes "Chunks" from file "./Factions/Factions.yml"
						if "%{_protectedchunks::*}%" contains "%chunk at player's location%":
							send  "%{@Prefix}% &7This is alredy claimed"
							stop
						else:
							set {_center} to player's location#location you want to loop the chunks around
							set {_radius} to 1#radius (in chunks), if it is set to 0 it returns only the chunk at {_center}
							set {_pos} to {_center}
							loop 2 * {_radius} + 1 times:
								set x-coordinate of {_pos} to x-coordinate of {_center} - 16 * {_radius} + (loop-number - 1) * 16
								set z-coordinate of {_pos} to z-coordinate of {_center} - 16 * {_radius}
								loop 2 * {_radius} + 1 times:
									set {_chunks::%{_pos}%} to chunk at {_pos}
									add 16 to z-coordinate of {_pos}
							#Serching for enemies
							loop {_chunks::*}:
								set {_check} to yaml value "Chunks.%loop-value-1%.owner" from "./Factions/chunks.yml"
								if "%{_check}%" isn't "<none>":
									if "%{_check}%" is "&4WarZone":
										send "%{@Prefix}% &7This chunk is too close from the &4WarZone"
										stop
									else if "%{_check}%" isn't "%{_F}%":
										send "%{@Prefix}% &7This chunk is too close to an enemy land"
										stop
							#If the faction owns a land already, I need to virify if the current chunk is contiguous to the other lands
							if size of {_lands::*} > 0:
								set {_center} to player's location#location you want to loop the chunks around
								set {_radius} to 1 #radius (in chunks), if it is set to 0 it returns only the chunk at {_center}
								set {_pos} to {_center}
								loop 2 * {_radius} + 1 times:
									set x-coordinate of {_pos} to x-coordinate of {_center} - 16 * {_radius} + (loop-number - 1) * 16
									set z-coordinate of {_pos} to z-coordinate of {_center} - 16 * {_radius}
									loop 2 * {_radius} + 1 times:
										set {_x} to x-coordinate of {_center} - x-coordinate of {_pos}
										set {_z} to z-coordinate of {_center} - z-coordinate of {_pos}
										if ({_x} ^ 2 + {_z} ^ 2) <= ({_radius} * 16) ^ 2:
											set {_chunks2::%{_pos}%} to chunk at {_pos}
										add 16 to z-coordinate of {_pos}
								#Actually checking if the chunk is contiguous:
								set {_contiguo} to false
								loop {_chunks2::*}:
									set {_check} to yaml value "Chunks.%loop-value-1%.owner" from "./Factions/chunks.yml"
									if "%{_check}%" is "%{_F}%":
										set {_contiguo} to true
							else:
								#if they don't own any land, I don't care if the land is contiguous
								set {_contiguo} to true
								
							if {_contiguo} is true:
								#add the chunk to the protected ones
								set yaml value "Chunks.%chunk at player's location%.owner" from file "./Factions/chunks.yml" to "%{_F}%"
								#Add the chunk to the list of lands of a faction
								add "%chunk at player's location%" to yaml list "Faction.%{_F}%.lands" from file "./Factions/Factions.yml"	
								send "%{@Prefix}% &7The land is now claimed by your faction!"
								stop
							else:
								send "%{@Prefix}% &7The land must be contiguous to your lands"
								stop
					else:
						send "%{@Prefix}% &7Only mods can claim land"
						stop
			else:
				send "%{@Prefix}% &7You can't claim in this world"
				stop
#Done
#TEST ME
		if arg-1 is "tag":
			set {_F} to yaml value "Player.%uuid of player%.faction" from file "./Factions/PlayerData.yml"
			if "%{_F}%" isn't "wilder":
				set {_P} to yaml value "Faction.%{_F}%.owner" from file "./Factions/Factions.yml"
				if "%{_P}%" is "%uuid of player%":
					if arg-2 is set:
						set {_l} to length of the arg-2
						if {_l} is less than 4:
							send  "%{@Prefix}% &cThe name needs at least 3 characters"
							stop
						if {_l} is more than 13:
							send "%{@Prefix}% &7The faction name can't have more than 13 characters"
							stop
						else:
							set {_list::*} to yaml nodes "Faction" from file "./Factions/Factions.yml"
							if "%{_list::*}%" contains "%arg-2%":
								send "%{@Prefix}% &7There is a faction named: &c%arg-2%"
							else:
							#Copy/Paste faction
								set {_players::*} to yaml list "Faction.%{_F}%.players" from file "./Factions/Factions.yml"
								set {_lands::*} to yaml list "Faction.%{_F}%.lands" from file "./Factions/Factions.yml"
								set {_mods::*} to yaml list "Faction.%{_F}%.mods" from file "./Factions/Factions.yml"
								set {_officers::*} to yaml list "Faction.%{_F}%.officers" from file "./Factions/Factions.yml"
								set {_dtr} to yaml value "Faction.%{_F}%.dtr" from file "./Factions/Factions.yml"
								set {_freeze} to yaml value "Faction.%{_F}%.freeze" from file "./Factions/Factions.yml"
								set {_raideable} to yaml value "Faction.%{_F}%.raideable" from file "./Factions/Factions.yml"
								set {_home::*} to yaml nodes with keys "Faction.%{_F}%.home" from file "./Factions/Factions.yml"

								set yaml value "Faction.%arg-2%.owner" from file "./Factions/Factions.yml" to "%uuid of player%"
								set yaml value "Faction.%arg-2%.dtr" from file "./Factions/Factions.yml" to {_dtr}
								set yaml value "Faction.%arg-2%.raideable" from file "./Factions/Factions.yml" to {_raideable}						
								set yaml value "Faction.%arg-2%.freeze"  from file "./Factions/Factions.yml" to {_freeze}

								loop {_mods::*}:
									add "%loop-value%" to yaml list "Faction.%arg-2%.mods" from file "./Factions/Factions.yml"

								loop {_officers::*}:
									add "%loop-value%" to yaml list "Faction.%arg-2%.officers" from file "./Factions/Factions.yml"

								loop {_players::*}:
									set yaml value "Player.%loop-value%.faction" from file "./Factions/PlayerData.yml" to "%arg-2%"
									add "%loop-value%" to yaml list "Faction.%arg-2%.players" from file "./Factions/Factions.yml"

								loop {_lands::*}:
									set yaml value "Chunks.%loop-value%.owner" from file "./Factions/Chunks.yml" to "%arg-2%"
									add "%loop-value%" to yaml list "Faction.%arg-2%.lands" from file "./Factions/Factions.yml"	

								if "%{_home::*}%" isn't "<none>":
									loop {_home::*}:
										set {_xyzw} to yaml value "Faction.%{_F}%.home.%loop-value%" from file "./Factions/Factions.yml"
										set yaml value "Faction.%arg-2%.home.%loop-value%" from file "./Factions/Factions.yml" to {_xyzw}

								set {_ally::*} to yaml list "Faction.%{_F}%.relations.ally" from file "./Factions/Factions.yml"
								if "%{_ally::*}%" isn't "<none>":
									loop {_ally::*}:
									#Remove {_F} from the ally list
										remove "%{_F}%" from yaml list "Faction.%loop-value%.relations.ally" from file "./Factions/Factions.yml"
									#Add this ally to arg-2
										add "%loop-value%" to yaml list "Faction.%arg-2%.relations.ally" from file "./Factions/Factions.yml"
									#Add arg-2 to the ally list
										add "%arg-2%" to yaml list "Faction.%loop-value%.relations.ally" from file "./Factions/Factions.yml"
									#Lets purge all perms and replace with the new {_F}
										set {_allyinteract::*} to  yaml list "Faction.%loop-value%.AllyPerm.interact" from file "./Factions/Factions.yml"
										if "%{_allyinteract::*}%" contains "%{_F}%":
											remove {_F} from yaml list "Faction.%loop-value%.AllyPerm.interact" from file "./Factions/Factions.yml"
											add arg-2 to yaml list "Faction.%loop-value%.AllyPerm.interact" from file "./Factions/Factions.yml"
										
										set {_allysethome::*} to  yaml list "Faction.%loop-value%.AllyPerm.sethome" from file "./Factions/Factions.yml"
										if "%{_allysethome::*}%" contains "%{_F}%":
											remove {_F} from yaml list "Faction.%loop-value%.AllyPerm.sethome" from file "./Factions/Factions.yml"
											add arg-2 to yaml list "Faction.%loop-value%.AllyPerm.sethome" from file "./Factions/Factions.yml"
									
										set {_allybreak::*} to  yaml list "Faction.%loop-value%.AllyPerm.break" from file "./Factions/Factions.yml"
										if "%{_allybreak::*}%" contains "%{_F}%":
											remove {_F} from yaml list "Faction.%loop-value%.AllyPerm.break" from file "./Factions/Factions.yml"
											add arg-2 to yaml list "Faction.%loop-value%.AllyPerm.break" from file "./Factions/Factions.yml"
									
										set {_allychest::*} to  yaml list "Faction.%loop-value%.AllyPerm.chest" from file "./Factions/Factions.yml"
										if "%{_allychest::*}%" contains "%{_F}%":
											remove {_F} from yaml list "Faction.%loop-value%.AllyPerm.chest" from file "./Factions/Factions.yml"
											add arg-2 to yaml list "Faction.%loop-value%.AllyPerm.chest" from file "./Factions/Factions.yml"

										set {_allybuild::*} to  yaml list "Faction.%loop-value%.AllyPerm.build" from file "./Factions/Factions.yml"
										if "%{_allybuild::*}%" contains "%{_F}%":
											remove {_F} from yaml list "Faction.%loop-value%.AllyPerm.build" from file "./Factions/Factions.yml"
											add arg-2 to yaml list "Faction.%loop-value%.AllyPerm.build" from file "./Factions/Factions.yml"

										clear {_allyinteract::*}
										clear {_allysethome::*}
										clear {_allybreak::*}
										clear {_allychest::*}
										clear {_allybuild::*}
									
							#Lets keep the old {_F} perms
								set {_allyinteract::*} to  yaml list "Faction.%{_F}%.AllyPerm.interact" from file "./Factions/Factions.yml"
								set {_allysethome::*} to  yaml list "Faction.%{_F}%.AllyPerm.sethome" from file "./Factions/Factions.yml"
								set {_allybreak::*} to  yaml list "Faction.%{_F}%.AllyPerm.break" from file "./Factions/Factions.yml"
								set {_allychest::*} to  yaml list "Faction.%{_F}%.AllyPerm.chest" from file "./Factions/Factions.yml"
								set {_allybuild::*} to  yaml list "Faction.%{_F}%.AllyPerm.build" from file "./Factions/Factions.yml"
								loop {_allyinteract::*}:
									add "%loop-value%" to yaml list "Faction.%arg-2%.AllyPerm.interact" from file "./Factions/Factions.yml"
								loop {_allysethome::*}:
									add "%loop-value%" to yaml list "Faction.%arg-2%.AllyPerm.sethome" from file "./Factions/Factions.yml"
								loop {_allybreak::*}:
									add "%loop-value%" to yaml list "Faction.%arg-2%.AllyPerm.break" from file "./Factions/Factions.yml"
								loop {_allychest::*}:
									add "%loop-value%" to yaml list "Faction.%arg-2%.AllyPerm.chest" from file "./Factions/Factions.yml"
								loop {_allybuild::*}:
									add "%loop-value%" to yaml list "Faction.%arg-2%.AllyPerm.build" from file "./Factions/Factions.yml"
								

								set {_truce::*} to yaml list "Faction.%{_F}%.relations.truce" from file "./Factions/Factions.yml"
								if "%{_truce::*}%" isn't "<none>":
									loop {_truce::*}:
									#Remove {_F} from the truce list
										remove "%{_F}%" from yaml list "Faction.%loop-value%.relations.truce" from file "./Factions/Factions.yml"
									#Add this truce to arg-2
										add "%loop-value%" to yaml list "Faction.%arg-2%.relations.truce" from file "./Factions/Factions.yml"
									#Add arg-2 to the truce list
										add "%arg-2%" to yaml list "Faction.%loop-value%.relations.truce" from file "./Factions/Factions.yml"

								set {_request::*} to yaml list "Faction.%{_F}%.relations.request" from file "./Factions/Factions.yml"
								if "%{_request::*}%" isn't "<none>":
									loop {_request::*}:
										add "%loop-value%" to yaml list "Faction.%arg-2%.relations.request" from file "./Factions/Factions.yml"

							#Delete the old faction
								delete yaml nodes "Faction.%{_F}%" from file "./Factions/Factions.yml"
								FactionTag(player's location)
								stop
					else:
						send "%{@Prefix}% &7You need to specify a new name for %{_F}%"
						stop
				else:
					send "%{@Prefix}% &7You must be the owner of %{_F}%  to use this command"
					stop
			else:
				send "%{@Prefix}% &7This command is only for faction owners"
				stop
#done
#tested
		if arg-1 is "sethome":
			set {_F} to yaml value "Player.%uuid of player%.faction" from file "./Factions/PlayerData.yml"
			if "%{_F}%" contains "wilder":
				send "%{@Prefix}% &7You need a faction to use this command"
				stop
			else:	
				set {_mods::*} to yaml list "Faction.%{_F}%.mods" from file "./Factions/Factions.yml"
				if "%{_mods::*}%" contains "%uuid of player%":
					set {_check} to yaml value "Chunks.%chunk at player's location%.owner" from "./Factions/chunks.yml"
					set {_ally::*} to yaml list "Faction.%{_check}%.AllyPerm.sethome" from file "./Factions/Factions.yml"

					if "%{_check}%" is "%{_F}%":
						set yaml value "Faction.%{_F}%.home.x" from file "./Factions/Factions.yml" to x-coordinate of player's location
						set yaml value "Faction.%{_F}%.home.y" from file "./Factions/Factions.yml" to y-coordinate of player's location
						set yaml value "Faction.%{_F}%.home.z" from file "./Factions/Factions.yml" to z-coordinate of player's location
						set yaml value "Faction.%{_F}%.home.world" from file "./Factions/Factions.yml" to "%player's world%"
						send "%{@Prefix}% &7The Home was set"
						set {_players::*} to yaml list "Faction.%{_F}%.players" from file "./Factions/Factions.yml"
						loop {_players::*}:
							send "%{@Prefix}% &7Now you can use &a/F home" to player from uuid loop-value-1
						stop
					else if {_ally::*} contains {_F}:
						set yaml value "Faction.%{_F}%.home.x" from file "./Factions/Factions.yml" to x-coordinate of player's location
						set yaml value "Faction.%{_F}%.home.y" from file "./Factions/Factions.yml" to y-coordinate of player's location
						set yaml value "Faction.%{_F}%.home.z" from file "./Factions/Factions.yml" to z-coordinate of player's location
						set yaml value "Faction.%{_F}%.home.world" from file "./Factions/Factions.yml" to "%player's world%"
						send "%{@Prefix}% &7The Home was set in an ally land"
						set {_players::*} to yaml list "Faction.%{_F}%.players" from file "./Factions/Factions.yml"
						loop {_players::*}:
							send "%{@Prefix}% &7Now you can use &a/F home" to player from uuid loop-value-1
						stop
					else:
						send "%{@Prefix}% &7You can use this command only in your faction land"
						stop
				else:
					send "%{@Prefix}% &7Only mods can set home lands"
					stop
#Done
#Tested
		if arg-1 is "show" or "who":
			if arg-2 is set:
				set {_l} to length of the arg-2
				if {_l} is less than 4:
					send "%{@Prefix}% &cThe name needs at least 3 characters"
					stop
				else:
					#Did the sender mean a faction?
					set {_list::*} to yaml nodes "Faction" from file "./Factions/Factions.yml"
					if "%{_list::*}%" contains "%arg-2%":
						FactionShow(arg-2,player)
						stop
					#if there is no faction with that name, I will check if there a player
					else:
						set {_p} to yaml value "player2uuid.%arg-2%" from file "./Factions/player2uuid.yml"
						if "%{_p}%" isn't "<none>":
							set {_F} to yaml value "Player.%{_p}%.faction" from file "./Factions/PlayerData.yml"
							if "%{_F}%" isn't "wilder":
								FactionShow({_F},player)
								stop
							else:
								send "&6[&2Wilder&6]"
								stop
						else:	
							send "%{@Prefix}% The faction %arg-2% does not exist, or the player %arg-2% is offline"
							stop
			else:
				set {_F} to yaml value "Player.%uuid of player%.faction" from file "./Factions/PlayerData.yml"
				if "%{_F}%" isn't "wilder":
					FactionShow({_F},player)
					stop
				else:
					send "&6[&2Wilder&6]"
					stop
#Done
#tested
		if arg-1 is "home":
			set {_F} to yaml value "Player.%uuid of player%.faction" from file "./Factions/PlayerData.yml"
			if "%{_F}%" contains "wilder":
				send "%{@Prefix}% &7You need a faction to use this command"
				stop
			set {_home::*} to yaml nodes "Faction.%{_F}%.home" from file "./Factions/Factions.yml"
			if "%{_home::*}%" isn't "<none>":
				set {_text} to "%{@Prefix}% &7Seras enviado a tu home en {@fhome-delay} segundos. No te muevas!"
				set {_location} to the player's location
				send "%{_text}%" to the player
				set {_delay} to {@fhome-delay}
				while {_delay} is greater than 0:
					if distance between {_location} and the player's location is less than 0.1:
						subtract 1 from {_delay}
						wait 1 second
					else:
						send "%{@Prefix}% &7Teleport cancelado." to the player
						stop
				if distance between {_location} and the player's location is less than 0.1:
					set {_x} to yaml value "Faction.%{_F}%.home.x" from file "./Factions/Factions.yml"
					set {_y} to yaml value "Faction.%{_F}%.home.y" from file "./Factions/Factions.yml"
					set {_z} to yaml value "Faction.%{_F}%.home.z" from file "./Factions/Factions.yml"
					set {_w} to yaml value "Faction.%{_F}%.home.world" from file "./Factions/Factions.yml"
					set {_loc} to player's location   
					set x-coordinate of {_loc} to {_x}
					set y-coordinate of {_loc} to {_y}
					set z-coordinate of {_loc} to {_z}
					set world of {_loc} to {_w}
					teleport player to {_loc}
					stop
				else:
					send "%{@Prefix}% &7Teleport cancelado." to the player
					stop
			else:
				send "%{@Prefix}% &7There is no home set"
				stop
#Done
#tested!
		if arg-1 is "leave":
			set {_F} to yaml value "Player.%uuid of player%.faction" from file "./Factions/PlayerData.yml"
			if "%{_F}%" isn't "wilder":
				set {_P} to yaml value "Faction.%{_F}%.owner" from file "./Factions/Factions.yml"
				if "%{_P}%" is "%uuid of player%":
					set {_players::*} to yaml list "Faction.%{_F}%.players" from file "./Factions/Factions.yml"
					if size of {_players::*} > 1:
						send "%{@Prefix}% &7You can't leave the faction if the faction isn't empty, use &2/f disband or &2/f owner"
						stop
					else:
						make player execute "f disband"
						stop
				else:
					remove "%uuid of player%" from yaml list "Faction.%{_F}%.players" from file "./Factions/Factions.yml"
					set {_mods::*} to yaml list "Faction.%{_F}%.mods" from file "./Factions/Factions.yml"
					if "%{_mods::*}%" contains "%uuid of player%":
						remove "%uuid of player%" from yaml list "Faction.%{_F}%.mods" from file "./Factions/Factions.yml"
					set yaml value "Player.%uuid of player%.faction" from file "./Factions/PlayerData.yml" to "wilder"
					set {x_factions_FAC::chat::%uuid of player%} to "p"
					send "%{@Prefix}% &7You have left the &c%{_F}%"
					FactionTag(player's location)
					stop
			else:
				send "%{@Prefix}% &7You must be in a faction to use this command"
				stop
#Done!
#test
		if arg-1 is "list":
			set {_factions::*} to yaml nodes "Faction" from file "./Factions/Factions.yml"
			set {_cont} to size of {_factions::*}
			if {_cont} is more than 8:
				set {_maxpag} to {_cont}/8
				set {_maxpag} to ceil({_maxpag})
			else:
				set {_maxpag} to 1
			if arg-2 is set:
				set {_arg2} to arg-2 parsed as a number
				if {_arg2} is more than {_maxpag}:
					set {_arg2} to {_maxpag}
					set {_cont} to 1
				set {_cont} to 1
				send  "--------List %{_arg2}%/ %{_maxpag}%--------"
				loop {_factions::*}:
					if loop-value-1 isn't "&4WarZone":
						set {_pag} to {_cont}/8
						set {_pag} to ceil({_pag})
						if {_pag} is {_arg2}:
							set {_F} to loop-value-1
							set {_online} to 0
							set {_offline} to 0
							set {_players::*} to yaml list "Faction.%{_F}%.players" from "./Factions/Factions.yml"
							loop {_players::*}:
								set {_check} to loop-value-2
								set {_check} to player from uuid {_check}
								if {_check} is online:
									set {_online} to {_online}+1
								set {_offline} to {_offline}+1
							send  "%{_F}% &a%{_online}%&8 /&c %{_offline}% "
							set {_cont} to {_cont}+1
						else:
							set {_cont} to {_cont}+1
				stop
			else:
				set {_arg2} to 1
				if {_arg2} is more than {_maxpag}:
					set {_arg2} to {_maxpag}
					set {_cont} to 1
				set {_cont} to 1
				send  "--------List %{_arg2}%/ %{_maxpag}%--------"
				loop  {_factions::*}:
					if loop-value-1 isn't "&4WarZone":
						set {_pag} to {_cont}/8
						set {_pag} to ceil({_pag})
						if {_pag} is {_arg2}:
							set {_F} to loop-value-1
							set {_online} to 0
							set {_offline} to 0
							set {_players::*} to yaml list "Faction.%{_F}%.players" from "./Factions/Factions.yml"
							loop {_players::*}:
								set {_check} to loop-value-2
								set {_check} to player from uuid {_check}
								if {_check} is online:
									set {_online} to {_online}+1
								set {_offline} to {_offline}+1
							send  "%{_F}% &a%{_online}%&8 /&c %{_offline}% "
							set {_cont} to {_cont}+1
						else:
							set {_cont} to {_cont}+1
				stop
#Done
#tested
		if arg-1 is "disband":
			set {_F} to yaml value "Player.%uuid of player%.faction" from file "./Factions/PlayerData.yml"
			if "%{_F}%" isn't "wilder":
				set {_P} to yaml value "Faction.%{_F}%.owner" from file "./Factions/Factions.yml"
				if "%{_P}%" is "%uuid of player%":
					set {_unix} to unix time
					set {_dtrfreeze} to yaml value "Faction.%{_F}%.freeze" from file "./Factions/Factions.yml"
					if {_dtrfreeze} < {_unix}:
						#break the ally
						set {_ally::*} to yaml list "Faction.%{_F}%.relations.ally" from file "./Factions/Factions.yml"
						loop {_ally::*}:
							remove "%{_F}%" from yaml list "Faction.%loop-value%.relations.ally" from file "./Factions/Factions.yml"
							#Keep stuff clean
							set {_AllyPerm.interact::*} to yaml list "Faction.%loop-value%.AllyPerm.interact" from file "./Factions/Factions.yml"
							if "%{_AllyPerm.interact::*}%" contains "%{_F}%":
								remove "%{_F}%" from yaml list "Faction.%loop-value%.AllyPerm.interact" from file "./Factions/Factions.yml"
							
							set {_AllyPerm.sethome::*} to yaml list "Faction.%loop-value%.AllyPerm.sethome" from file "./Factions/Factions.yml"
							if "%{_AllyPerm.sethome::*}%" contains "%{_F}%":
								remove "%{_F}%" from yaml list "Faction.%loop-value%.AllyPerm.sethome" from file "./Factions/Factions.yml"

							set {_AllyPerm.break::*} to yaml list "Faction.%loop-value%.AllyPerm.break" from file "./Factions/Factions.yml"
							if "%{_AllyPerm.break::*}%" contains "%{_F}%":	
								remove "%{_F}%" from yaml list "Faction.%loop-value%.AllyPerm.break" from file "./Factions/Factions.yml"

							set {_AllyPerm.chest::*} to yaml list "Faction.%loop-value%.AllyPerm.chest" from file "./Factions/Factions.yml"
							if "%{_AllyPerm.chest::*}%" contains "%{_F}%":		
								remove "%{_F}%" from yaml list "Faction.%loop-value%.AllyPerm.chest" from file "./Factions/Factions.yml"

							set {_AllyPerm.build::*} to yaml list "Faction.%loop-value%.AllyPerm.build" from file "./Factions/Factions.yml"
							if "%{_AllyPerm.build::*}%" contains "%{_F}%":
								remove "%{_F}%" from yaml list "Faction.%loop-value%.AllyPerm.build" from file "./Factions/Factions.yml"

						#break truce
						set {_truce::*} to yaml list "Faction.%{_F}%.relations.truce" from file "./Factions/Factions.yml"
						loop {_truce::*}:
							remove "%{_F}%" from yaml list "Faction.%loop-value%.relations.truce" from file "./Factions/Factions.yml"

						#Make member wilders
						set {_players::*} to yaml list "Faction.%{_F}%.players" from file "./Factions/Factions.yml"
						loop {_players::*}:
							set yaml value "Player.%loop-value%.faction" from file "./Factions/PlayerData.yml" to "wilder" 
							set {x_factions_FAC::chat::%loop-value%} to "p"
						#clean the lands	
						set {_lands::*} to yaml list "Faction.%{_F}%.lands" from file "./Factions/Factions.yml"
						loop {_lands::*}:
							delete yaml nodes "Chunks.%loop-value%" from file "./Factions/chunks.yml"

						#Remove the node	
						delete yaml nodes "Faction.%{_F}%" from file "./Factions/Factions.yml"
						FactionTag(player's location)
						broadcast "%{@Prefix}% &7The Faction %{_F}% was disbaned"
						stop
					else:
						send "%{@Prefix}% &7You can't disband with dtr freeze"
						stop
				else:
					send "%{@Prefix}% &7You must be the owner of &2%{_F}%"
					stop
			else:
				send "%{@Prefix}% &7You must own a faction to use this command"
				stop
#Done
#tested
		if arg-1 is "mod":
			set {_F} to yaml value "Player.%uuid of player%.faction" from file "./Factions/PlayerData.yml"
			if "%{_F}%" isn't "wilder":
				set {_P} to yaml value "Faction.%{_F}%.owner" from file "./Factions/Factions.yml"
				if "%{_P}%" is "%uuid of player%":
					if arg-2 is set:
						set {_l} to length of the arg-2
						if {_l} is less than 3:
							send "%{@Prefix}% &7The name must contain at least 3 characters"
							stop
						if arg-2 is player:
							send "%{@Prefix}% &7You are a mod already!"
							stop
						set {_p} to uuid of arg-2 parsed as a player
						set {_players::*} to yaml list "Faction.%{_F}%.players" from file "./Factions/Factions.yml"
						if "%{_players::*}%" contains "%{_p}%":
							set {_mods::*} to yaml list "Faction.%{_F}%.mods" from file "./Factions/Factions.yml"
							if "%{_mods::*}%" contains "%{_p}%":
								remove "%{_p}%" from yaml list "Faction.%{_F}%.mods" from file "./Factions/Factions.yml"
								send "%{@Prefix}% &2%arg-2% &7is no longer a MOD"
								send "%{@Prefix}% &7You are no longer a MOD of &2%{_F}%" to player from uuid {_p}
								stop
							else:
								add "%{_p}%" to yaml list "Faction.%{_F}%.mods" from file "./Factions/Factions.yml"
								send "%{@Prefix}% &7You are now a MOD of &2%{_F}%" to player from uuid {_p}
								send "%{@Prefix}% &2%arg-2% &7is now a MOD"
								stop
						else:
							send "%{@Prefix}% &c%arg-2% &7is not a member of the faction"
							stop
					else:
						send "%{@Prefix}% &7You need to specify a player"
						stop
				else:
					send "%{@Prefix}% &7You must be the owner of &2%{_F}% &7to use this command"
					stop
			else:
				send "%{@Prefix}% &7You must own a faction to use this command"
				stop
#Done
#tested
		if arg-1 is "officer":
			set {_F} to yaml value "Player.%uuid of player%.faction" from file "./Factions/PlayerData.yml"
			if "%{_F}%" isn't "wilder":
				set {_P} to yaml value "Faction.%{_F}%.owner" from file "./Factions/Factions.yml"
				if "%{_P}%" is "%uuid of player%":
					if arg-2 is set:
						set {_l} to length of the arg-2
						if {_l} is less than 3:
							send "%{@Prefix}% &7The name must contain at least 3 characters"
							stop
						set {_p} to uuid of arg-2 parsed as a player
						set {_players::*} to yaml list "Faction.%{_F}%.players" from file "./Factions/Factions.yml"
						if "%{_players::*}%" contains "%{_p}%":
							set {_officers::*} to yaml list "Faction.%{_F}%.officers" from file "./Factions/Factions.yml"
							if "%{_officers::*}%" contains {_p}:
								remove "%{_p}%" from yaml list "Faction.%{_F}%.officers" from file "./Factions/Factions.yml"
								send "%{@Prefix}% &2%arg-2% &7is no longer an OFFICER"
								send "%{@Prefix}% &7You are no longer an OFFICER of &2%{_F}%" to player from uuid {_p}
								stop
							else:
								add "%{_p}%" to yaml list "Faction.%{_F}%.officers" from file "./Factions/Factions.yml"
								send "%{@Prefix}% &7You are now an OFFICER of &2%{_F}%" to player from uuid {_p}
								send "%{@Prefix}% &2%arg-2% &7is now an OFFICER"
								stop
						else:
							send "%{@Prefix}% &c%arg-2% &7is not a member of the faction"
							stop
					else:
						send "%{@Prefix}% &7You need to specify a player"
						stop
				else:
					send "%{@Prefix}% &7You must be the owner of &2%{_F}% &7to use this command"
					stop
			else:
				send "%{@Prefix}% &7You must own a faction to use this command"
				stop
#Done
#tested
		if arg-1 is "kick":
			set {_F} to yaml value "Player.%uuid of player%.faction" from file "./Factions/PlayerData.yml"
			if "%{_F}%" isn't "wilder":
				set {_mods::*} to yaml list "Faction.%{_F}%.mods" from file "./Factions/Factions.yml"
				if "%{_mods::*}%" contains "%uuid of player%":
					if arg-2 is set:
						if arg-2 is player:
							send "%{@Prefix}% &7You can't kick your self from the faction"
							send "%{@Prefix}% &7Use &2/F leave &7or &2/F disband"
							stop
						set {_l} to length of the arg-2
						if {_l} is more than 16:
							send "%{@Prefix}% &7The name must contain at least 3 characters"
							stop
						else:
							set {_p} to yaml value "player2uuid.%arg-2%" from file "./Factions/player2uuid.yml"
							set {_owner} to yaml value "Faction.%{_F}%.owner" from file "./Factions/Factions.yml"
							if "%{_owner}%" is "%{_p}%":
								send "%{@Prefix}% &7You can't kick the owner!"
								stop
							set {_players::*} to yaml list "Faction.%{_F}%.players" from file "./Factions/Factions.yml"
							if "%{_players::*}%" contains "%{_p}%":
								send "%{@Prefix}% %player from uuid {_p}% was Kicked from %{_F}%"
								remove "%{_p}%" from yaml list "Faction.%{_F}%.mods" from file "./Factions/Factions.yml"
								remove "%{_p}%" from yaml list "Faction.%{_F}%.players" from file "./Factions/Factions.yml"
								set {x_factions_FAC::chat::%{_p}%} to "p"
								set yaml value "Player.%{_p}%.faction" from file "./Factions/PlayerData.yml" to "wilder"
								set {_dtr} to yaml value "Faction.%{_F}%.dtr" from file "./Factions/Factions.yml"
								set {_dtr} to {_dtr}-1
								set yaml value "Faction.%{_F}%.dtr" from file "./Factions/Factions.yml" to {_dtr}
								FactionTag(player's location)
								FactionDtr("%{_F}%")
								stop
							else:
								send "%{@Prefix}% %player from uuid {_p}% does not belong to %{_F}%"
								stop
					else:
						send "%{@Prefix}% &7You need to specify a player name"
						stop
				else:
					send "%{@Prefix}% &7Only mods can kick players"
					stop
			else:
				send "%{@Prefix}% &7You don't belong to a faction"
				stop
#Done
#tested
		if arg-1 is "owner":
			set {_F} to yaml value "Player.%uuid of player%.faction" from file "./Factions/PlayerData.yml"
			if "%{_F}%" isn't "wilder":
				set {_P} to yaml value "Faction.%{_F}%.owner" from file "./Factions/Factions.yml"
				if "%{_P}%" is "%uuid of player%":
					if arg-2 is set:
						if arg-2 is player:
							send "%{@Prefix}% &7You are the owner, silly!"
							stop
						set {_l} to length of the arg-2
						if {_l} is more than 16:
							send "%{@Prefix}% &7The name must have at least 3 characters"
							stop
						else:
							if arg-2 parsed as player is online:
								set {_P} to uuid of arg-2 parsed as player
								set {_players::*} to yaml list "Faction.%{_F}%.players" from file "./Factions/Factions.yml"
								if "%{_players::*}%" contains "%{_P}%":
									remove "%uuid of player%" from yaml list "Faction.%{_F}%.mods" from file "./Factions/Factions.yml"
									remove "%uuid of player%" from yaml list "Faction.%{_F}%.officers" from file "./Factions/Factions.yml"
									add "%{_p}%" to yaml list "Faction.%{_F}%.mods" from file "./Factions/Factions.yml"
									add "%{_p}%" to yaml list "Faction.%{_F}%.officers" from file "./Factions/Factions.yml"
									set yaml value "Faction.%{_F}%.owner" from file "./Factions/Factions.yml" to "%{_p}%"
									loop {_players::*}:
										send "%{@Prefix}% &7The owner of &2%{_F}% &7is now &2%arg-2% " to player from uuid loop-value
									#remove player from the owner
									delete {x_factions_FAC::factions::%{_F}%::owner::%uuid of player%}
									send "%{@Prefix}% &7You are no longer a mod/officer. You may ask &2%arg-2% &7to give you the mod range "
									stop
								else:
									send "%{@Prefix}% &c%arg-2% &7doesn't belong to this faction"
									stop
					else:
						send "%{@Prefix}% &7You must specify a player name"
						stop
				else:
					send "%{@Prefix}% &7This command is only for the owner of the faction"
					stop
			else:
				send "%{@Prefix}% &7You must own a faction to use this command"
				stop
#Done
#tested
		if arg-1 is "ally":
			set {_F} to yaml value "Player.%uuid of player%.faction" from file "./Factions/PlayerData.yml"
			if "%{_F}%" isn't "wilder":
				set {_mods::*} to yaml list "Faction.%{_F}%.mods" from file "./Factions/Factions.yml"
				if "%{_mods::*}%" contains "%uuid of player%":
					if arg-2 is {_F}:
						send "%{@Prefix}% &7You can't ally your self"
						stop
					if arg-2 is set:
						set {_l} to length of the arg-2
						if {_l} is more than 16:
							send "%{@Prefix}% &7The name must contain at least 3 characters"
							stop
						if arg-2 parsed as player is online:
							set {_p} to uuid of arg-2 parsed as a player
							set {_p} to yaml value "Player.%{_p}%.faction" from file "./Factions/PlayerData.yml"
						else:
							set {_p} to arg-2
						#lets check that the faction %{_p}% exist
						set {_list::*} to yaml nodes "Faction" from file "./Factions/Factions.yml"
						if "%{_list::*}%" contains "%{_p}%":
						#Lets check max-ally
							set {_ally::*} to yaml list "Faction.%{_F}%.relations.ally" from file "./Factions/Factions.yml"
							if "%{_ally::*}%" contains "%{_p}%":
								send "%{@Prefix}% &7%{_p}% is your ally already"
								stop
						
							set {_truce::*} to yaml list  "Faction.%{_F}%.relations.truce" from file "./Factions/Factions.yml"
							if "%{_truce::*}%" contains "%{_p}%":
								send "%{@Prefix}% &7You already have a relation with %{_p}%"
								send "%{@Prefix}% &7You must end the relation with this factions first"
								send "%{@Prefix}% &7You can use /f neutral"
								stop
							if size of {_ally::*} is {@max-ally}:
								send "%{@Prefix}% &7You can't have any more allies."
								stop

							#Lets check if he want to answer a request :
							set {_request::*} to yaml list "Faction.%{_F}%.relations.request.ally" from file "./Factions/Factions.yml"
							if "%{_request::*}%" contains "%{_p}%":
								#remove requests
								remove "%{_P}%" from yaml list  "Faction.%{_F}%.relations.request.ally" from file "./Factions/Factions.yml"
								#forge fordo
								add "%{_p}%" to yaml list "Faction.%{_F}%.relations.ally" from file "./Factions/Factions.yml"
								add "%{_F}%" to yaml list "Faction.%{_p}%.relations.ally" from file "./Factions/Factions.yml"

								# add "%{_p}%" to yaml list "Faction.%{_F}%.AllyPerm.sethome" from file "./Factions/Factions.yml"
								# add "%{_p}%" to yaml list "Faction.%{_F}%.AllyPerm.interact" from file "./Factions/Factions.yml"
								# add "%{_p}%" to yaml list "Faction.%{_F}%.AllyPerm.break" from file "./Factions/Factions.yml"
								# add "%{_p}%" to yaml list "Faction.%{_F}%.AllyPerm.build" from file "./Factions/Factions.yml"
								# add "%{_p}%" to yaml list "Faction.%{_F}%.AllyPerm.chest" from file "./Factions/Factions.yml"


								Broadcast "%{@Prefix}% &c%{_F}% &7allied with &c%{_p}%"
								FactionTag(player's location)
								stop
							else:
								#lets send a request
								send "%{@Prefix}% &c The ally request was sent."
								add "%{_F}%" to yaml list "Faction.%{_p}%.relations.request.ally" from file "./Factions/Factions.yml"
								set {_players::*} to yaml list "Faction.%{_p}%.players" from file "./Factions/Factions.yml"
								loop {_players::*}:
									send "%{@Prefix}% &c%{_F}% &7sent an ally request" to player from uuid loop-value-1
								stop
						else:
							send "%{@Prefix}% &7There is no Faction with that name"
							stop
					else:
						send "%{@Prefix}% &7You must specify a faction name"
						stop
				else:
					send "%{@Prefix}% &7Only mods can send ally request!"
					stop
			else:
				send "%{@Prefix}% &7You must belong to a faction"
				stop
#Done
		if arg-1 is "truce":
			set {_F} to yaml value "Player.%uuid of player%.faction" from file "./Factions/PlayerData.yml"
			if "%{_F}%" isn't "wilder":
				set {_mods::*} to yaml list "Faction.%{_F}%.mods" from file "./Factions/Factions.yml"
				if "%{_mods::*}%" contains "%uuid of player%":
					if arg-2 is {_F}:
						send "%{@Prefix}% &7You can't make a truce with your self"
						stop
					if arg-2 is set:
						set {_l} to length of the arg-2
						if {_l} is more than 16:
							send "%{@Prefix}% &7The name must contain at least 3 characters"
							stop
						if arg-2 parsed as player is online:
							set {_p} to uuid of arg-2 parsed as a player
							set {_p} to yaml value "Player.%{_p}%.faction" from file "./Factions/PlayerData.yml"
						else:
							set {_p} to arg-2
						#lets check that the faction %{_p}% exist
						set {_list::*} to yaml nodes "Faction" from file "./Factions/Factions.yml"
						if "%{_list::*}%" contains "%{_p}%":
						#Lets check max-ally
							set {_ally::*} to yaml list "Faction.%{_F}%.relations.truce" from file "./Factions/Factions.yml"
							if "%{_ally::*}%" contains "%{_p}%":
								send "%{@Prefix}% &7You already have a truce with %{_p}%"
								stop
						
							set {_truce::*} to yaml list  "Faction.%{_F}%.relations.ally" from file "./Factions/Factions.yml"
							if "%{_truce::*}%" contains "%{_p}%":
								send "%{@Prefix}% &7You already have a relation with %{_p}%"
								send "%{@Prefix}% &7You must end the relation with this factions first"
								send "%{@Prefix}% &7You can use /f neutral"
								stop
							if size of {_ally::*} is {@max-truce}:
								send "%{@Prefix}% &7You can't have any more truce."
								stop

							#Lets check if he want to answer a request :
							set {_request::*} to yaml list "Faction.%{_F}%.relations.request.truce" from file "./Factions/Factions.yml"
							if "%{_request::*}%" contains "%{_p}%":
								#remove requests
								remove "%{_P}%" from yaml list  "Faction.%{_F}%.relations.request.truce" from file "./Factions/Factions.yml"
								#forge fordo
								add "%{_p}%" to yaml list "Faction.%{_F}%.relations.truce" from file "./Factions/Factions.yml"
								add "%{_F}%" to yaml list "Faction.%{_p}%.relations.truce" from file "./Factions/Factions.yml"

								# add "%{_p}%" to yaml list "Faction.%{_F}%.AllyPerm.sethome" from file "./Factions/Factions.yml"
								# add "%{_p}%" to yaml list "Faction.%{_F}%.AllyPerm.interact" from file "./Factions/Factions.yml"
								# add "%{_p}%" to yaml list "Faction.%{_F}%.AllyPerm.break" from file "./Factions/Factions.yml"
								# add "%{_p}%" to yaml list "Faction.%{_F}%.AllyPerm.build" from file "./Factions/Factions.yml"
								# add "%{_p}%" to yaml list "Faction.%{_F}%.AllyPerm.chest" from file "./Factions/Factions.yml"


								Broadcast "%{@Prefix}% &c%{_F}% &7pacted with &c%{_p}%"
								FactionTag(player's location)
								stop
							else:
								#lets send a request
								send "%{@Prefix}% &c The truce request was sent."
								add "%{_F}%" to yaml list "Faction.%{_p}%.relations.request.truce" from file "./Factions/Factions.yml"
								set {_players::*} to yaml list "Faction.%{_p}%.players" from file "./Factions/Factions.yml"
								loop {_players::*}:
									send "%{@Prefix}% &c%{_F}% &7sent a truce request" to player from uuid loop-value-1
								stop
						else:
							send "%{@Prefix}% &7There is no Faction with that name"
							stop
					else:
						send "%{@Prefix}% &7You must specify a faction name"
						stop
				else:
					send "%{@Prefix}% &7Only mods can send truce request!"
					stop
			else:
				send "%{@Prefix}% &7You must belong to a faction"
				stop
#Done
#tested
		if arg-1 is "perms":
			set {_F} to yaml value "Player.%uuid of player%.faction" from file "./Factions/PlayerData.yml"
			if "%{_F}%" isn't "wilder":
				set {_mods::*} to yaml list "Faction.%{_F}%.mods" from file "./Factions/Factions.yml"
				if "%{_mods::*}%" contains "%uuid of player%":
					if arg-2 is {_F}:
						send "%{@Prefix}% &7You must specify an ally"
						stop
					if arg-2 is set:
						set {_l} to length of the arg-2
						if {_l} is more than 16:
							send "%{@Prefix}% &7The name must contain at least 3 characters"
							stop
						if arg-2 parsed as player is online:
							set {_p} to uuid of arg-2 parsed as a player
							set {_p} to yaml value "Player.%{_p}%.actions" from file "./Factions/PlayerData.yml"
						else:
							set {_p} to arg-2
						#lets check that the faction %{_p}% exist
						set {_list::*} to yaml nodes "Faction" from file "./Factions/Factions.yml"
						if "%{_list::*}%" contains "%{_p}%":
							#lets check that this factions does not have any type of relation with arg-2
							set {_ally::*} to yaml list "Faction.%{_F}%.relations.ally" from file "./Factions/Factions.yml"
							if "%{_ally::*}%" contains "%{_p}%":
								if arg-3 isn't "build" or "sethome" or "interact" or "chest" or "break" or "build":
									send "%{@Prefix}% Perms for ally:"
									send " &7build yes/no"
									send " &7sethome  yes/no"
									send " &7interact (buttons,door,etc) yes/no"
									send " &7break yes/no"
									send " &7chest yes/no"
									stop
								if arg-3 isn't set:
									send "%{@Prefix}% Perms for ally:"
									send " &7build yes/no"
									send " &7sethome  yes/no"
									send " &7interact (buttons,door,etc) yes/no"
									send " &7break yes/no"
									send " &7chest yes/no"
									stop
								if arg-3 is "build":
									set {_perms::*} to yaml list "Faction.%{_F}%.AllyPerm.build" from file "./Factions/Factions.yml"
									if "%{_perms::*}%" contains "%{_p}%":
										remove "%{_P}%" from yaml list  "Faction.%{_F}%.AllyPerm.build" from file "./Factions/Factions.yml"
										send "%{@Prefix}% Permission changed. Now %{_p}% can't BUILD in your lands"
										stop
									else:
										add "%{_p}%" to yaml list "Faction.%{_F}%.AllyPerm.build" from file "./Factions/Factions.yml"
										send "%{@Prefix}% Permission changed. Now %{_p}% can BUILD in your lands"
										stop

								if arg-3 is "sethome":
									set {_perms::*} to yaml list "Faction.%{_F}%.AllyPerm.sethome" from file "./Factions/Factions.yml"
									if "%{_perms::*}%" contains "%{_p}%":
										remove "%{_P}%" from yaml list  "Faction.%{_F}%.AllyPerm.sethome" from file "./Factions/Factions.yml"
										send "%{@Prefix}% Permission changed. Now %{_p}% can't SET HOME in your lands"
										stop
									else:
										add "%{_p}%" to yaml list "Faction.%{_F}%.AllyPerm.sethome" from file "./Factions/Factions.yml"
										send "%{@Prefix}% Permission changed. Now %{_p}% can SET HOME in your lands"
										stop

								if arg-3 is "interact":
									set {_perms::*} to yaml list "Faction.%{_F}%.AllyPerm.interact" from file "./Factions/Factions.yml"
									if "%{_perms::*}%" contains "%{_p}%":
										remove "%{_P}%" from yaml list  "Faction.%{_F}%.AllyPerm.interact" from file "./Factions/Factions.yml"
										send "%{@Prefix}% Permission changed. Now %{_p}% can't INTERACT in your lands"
										stop
									else:
										add "%{_p}%" to yaml list "Faction.%{_F}%.AllyPerm.interact" from file "./Factions/Factions.yml"
										send "%{@Prefix}% Permission changed. Now %{_p}% can INTERACT in your lands"
										stop

								if arg-3 is "break":
									set {_perms::*} to yaml list "Faction.%{_F}%.AllyPerm.break" from file "./Factions/Factions.yml"
									if "%{_perms::*}%" contains "%{_p}%":
										remove "%{_P}%" from yaml list  "Faction.%{_F}%.AllyPerm.break" from file "./Factions/Factions.yml"
										send "%{@Prefix}% Permission changed. Now %{_p}% can't BREAK in your lands"
										stop
									else:
										add "%{_p}%" to yaml list "Faction.%{_F}%.AllyPerm.break" from file "./Factions/Factions.yml"
										send "%{@Prefix}% Permission changed. Now %{_p}% can BREAK in your lands"
										stop

								if arg-3 is "chest":
									set {_perms::*} to yaml list "Faction.%{_F}%.AllyPerm.chest" from file "./Factions/Factions.yml"
									if "%{_perms::*}%" contains "%{_p}%":
										remove "%{_P}%" from yaml list  "Faction.%{_F}%.AllyPerm.chest" from file "./Factions/Factions.yml"
										send "%{@Prefix}% Permission changed. Now %{_p}% can't OPEN CHEST in your lands"
										stop
									else:
										add "%{_p}%" to yaml list "Faction.%{_F}%.AllyPerm.chest" from file "./Factions/Factions.yml"
										send "%{@Prefix}% Permission changed. Now %{_p}% can OPEN CHEST in your lands"
										stop
							else:
								send "%{_p}% is not your ally"
								stop
						else:
							send "%{@Prefix}% &7There is no Faction with that name"
							stop
					else:
						send "%{@Prefix}% Perms for ally:"
						send " &7build"
						send " &7sethome"
						send " &7interact (buttons,door,etc) "
						send " &7break"
						send " &7chest"
						stop
				else:
					send "%{@Prefix}% &7Only mods can set ally perms!"
					stop
			else:
				send "%{@Prefix}% &7You must belong to a faction"
				stop
#Done
#tested
		if arg-1 is "neutral":
			set {_F} to yaml value "Player.%uuid of player%.faction" from file "./Factions/PlayerData.yml"
			if "%{_F}%" isn't "wilder":
				set {_mods::*} to yaml list "Faction.%{_F}%.mods" from file "./Factions/Factions.yml"
				if "%{_mods::*}%" contains "%uuid of player%":
					if arg-2 is {_F}:
						send "%{@Prefix}% &7You can't make a truce with your self"
						stop
					if arg-2 is set:
						set {_l} to length of the arg-2
						if {_l} is more than 16:
							send "%{@Prefix}% &7The name must contain at least 3 characters"
							stop
						if arg-2 parsed as player is online:
							set {_p} to uuid of arg-2 parsed as a player
							set {_p} to yaml value "Player.%{_p}%.faction" from file "./Factions/PlayerData.yml"
						else:
							set {_p} to arg-2
						set {_list::*} to yaml nodes "Faction" from file "./Factions/Factions.yml"
						if "%{_list::*}%" contains "%{_p}%":

						#Disband ALLY
							set {_ally::*} to yaml list "Faction.%{_F}%.relations.ally" from file "./Factions/Factions.yml"
							if "%{_ally::*}%" contains "%{_p}%":
								loop {_ally::*}:
									# break the ally
									remove "%{_F}%" from yaml list "Faction.%loop-value%.relations.ally" from file "./Factions/Factions.yml"
									# break permission
									remove "%loop-value%" from yaml list "Faction.%loop-value%.relations.ally" from file "./Factions/Factions.yml"
									# break permission
									set {_interact::*} to yaml list "Faction.%loop-value%.AllyPerm.interact" from file "./Factions/Factions.yml"
									if "%{_interact}%" contains "%{_F}%":
										remove "%{_F}%" from yaml list "Faction.%loop-value%.AllyPerm.interact" from file "./Factions/Factions.yml"

									set {_sethome::*} to yaml list "Faction.%loop-value%.AllyPerm.sethome" from file "./Factions/Factions.yml"
									if "%{_sethome::*}%" contains "%{_F}%":
										remove "%{_F}%" from yaml list "Faction.%loop-value%.AllyPerm.sethome" from file "./Factions/Factions.yml"

									set {_break::*} to yaml list "Faction.%loop-value%.AllyPerm.break" from file "./Factions/Factions.yml"
									if "%{_break}%" contains "%{_F}%":
										remove "%{_F}%" from yaml list "Faction.%loop-value%.AllyPerm.break" from file "./Factions/Factions.yml"

									set {_interact::*} to yaml list "Faction.%loop-value%.AllyPerm.chest" from file "./Factions/Factions.yml"
									if "{_interact}" contains "%{_F}%":
										remove "%{_F}%" from yaml list "Faction.%loop-value%.AllyPerm.chest" from file "./Factions/Factions.yml"

									set {_build::*} to yaml list "Faction.%loop-value%.AllyPerm.build" from file "./Factions/Factions.yml"
									if "%{_build::*}%" contains "%{_F}%":
										remove "%{_F}%" from yaml list "Faction.%loop-value%.AllyPerm.build" from file "./Factions/Factions.yml"
									#
									#
									# break the ally
									remove "%loop-value%" from yaml list "Faction.%{_F}%.relations.ally" from file "./Factions/Factions.yml"
									# break permission
									set {_interact::*} to yaml list "Faction.%{_F}%.AllyPerm.interact" from file "./Factions/Factions.yml"
									if "%{_interact}%" contains "%loop-value%":
										remove "%loop-value%" from yaml list "Faction.%{_F}%.AllyPerm.interact" from file "./Factions/Factions.yml"

									set {_sethome::*} to yaml list "Faction.%{_F}%.AllyPerm.sethome" from file "./Factions/Factions.yml"
									if "%{_sethome::*}%" contains "%loop-value%":
										remove "%loop-value%" from yaml list "Faction.%{_F}%.AllyPerm.sethome" from file "./Factions/Factions.yml"

									set {_break::*} to yaml list "Faction.%{_F}%.AllyPerm.break" from file "./Factions/Factions.yml"
									if "%{_break}%" contains "%loop-value%":
										remove "%loop-value%" from yaml list "Faction.%{_F}%.AllyPerm.break" from file "./Factions/Factions.yml"

									set {_interact::*} to yaml list "Faction.%{_F}%.AllyPerm.chest" from file "./Factions/Factions.yml"
									if "{_interact}" contains "%loop-value%":
										remove "%loop-value%" from yaml list "Faction.%{_F}%.AllyPerm.chest" from file "./Factions/Factions.yml"

									set {_build::*} to yaml list "Faction.%{_F}%.AllyPerm.build" from file "./Factions/Factions.yml"
									if "%{_build::*}%" contains "%loop-value%":
										remove "%loop-value%" from yaml list "Faction.%{_F}%.AllyPerm.build" from file "./Factions/Factions.yml"

							set {_disban} to "ALLY"

						#Disband TRUCE
							set {_truce::*} to yaml list "Faction.%{_F}%.relations.ally" from file "./Factions/Factions.yml"
							if "%{_truce::*}%" contains "%{_p}%":
								loop {_truce::*}:
									remove "%{_F}%" from yaml list "Faction.%loop-value%.relations.truce" from file "./Factions/Factions.yml"
									remove "%loop-value%" from yaml list "Faction.%{_F}%.relations.truce" from file "./Factions/Factions.yml"
								set {_disban} to "ally"
							set {_disban} to "TRUCE"

							FactionTag(player's location)
						#NOTIFY PLAYERS		
							set {_players::*} to yaml list "Faction.%{_F}%.players" from file "./Factions/Factions.yml"
							loop {_players::*}:
								send "%{@Prefix}% &d%{_F}% &7disbanded the %{_disban}% with %arg-2%" to player from uuid loop-value-1
						#NOTIFY PLAYERS	
							clear {_players::*}
							set {_players::*} to yaml list "Faction.%{_p}%.players" from file "./Factions/Factions.yml"
							loop {_players::*}:
								send "%{@Prefix}% &d%{_F}% &7disbanded the %{_disban}% with %arg-2%" to player from uuid loop-value-1
							stop
						else:
							send "%{@Prefix}% &7There is no Faction with that name"
							stop
					else:
						send "%{@Prefix}% &7You need to specify a faction, use &2/F show &7to see the ally or truce name"
						stop
				else:
					send "%{@Prefix}% &7Only mods may cancel an ally pact!"
					stop
			else:
				send "%{@Prefix}% &7Only faction's mods can cancel an ally pact!"
				stop
#TODO!
		if arg-1 is "c" or "chat":
			set {_F} to yaml value "Player.%uuid of player%.faction" from file "./Factions/PlayerData.yml"
			if "%{_F}%" isn't "wilder":
				if arg-2 is set:
					if "%arg-2%" is "p":
						set {x_factions_FAC::chat::%uuid of player%} to "p"
						send "%{@Prefix}% &cGlobal Channel"
						stop
					if "%arg-2%" is "f":
						set {x_factions_FAC::chat::%uuid of player%} to "f"
						send "%{@Prefix}% &cFaction Channel"
						stop
					if "%arg-2%" is "a":
						set {x_factions_FAC::chat::%uuid of player%} to "a"
						send "%{@Prefix}% &cAlly Channel"
						stop
					else:
						send "%{@Prefix}% &cOptions are: P , F or A (Public, Faction or Ally)"
						stop
			else:
				send "%{@Prefix}% &7You must have a faction to use this command"
				stop
#Done
#Tested
		if arg-1 is "map":
			set {_center} to player's location#location you want to loop the chunks around
			set {_radius} to 4
			set {_pos} to {_center}
			set {_counter} to 1
			if facing of player is north:
				loop 2 * {_radius} + 1 times:
					set z-coordinate of {_pos} to z-coordinate of {_center} - 16 * {_radius} + (loop-number - 1) * 16
					set x-coordinate of {_pos} to x-coordinate of {_center} - 16 * {_radius}
					loop 2 * {_radius} + 1 times:
						set {_chunks::%{_counter}%} to chunk at {_pos}
						add 1 to {_counter}
						add 16 to x-coordinate of {_pos}
			else if facing of player is south:
				loop 2 * {_radius} + 1 times:
					set z-coordinate of {_pos} to z-coordinate of {_center} + 16 * {_radius} - (loop-number - 1) * 16
					set x-coordinate of {_pos} to x-coordinate of {_center} + 16 * {_radius}
					loop 2 * {_radius} + 1 times:
						set {_chunks::%{_counter}%} to chunk at {_pos}
						add 1 to {_counter}
						add -16 to x-coordinate of {_pos}
			else if facing of player is west:
				loop 2 * {_radius} + 1 times:
					set x-coordinate of {_pos} to x-coordinate of {_center} - 16 * {_radius} + (loop-number - 1) * 16
					set z-coordinate of {_pos} to z-coordinate of {_center} + 16 * {_radius}
					loop 2 * {_radius} + 1 times:
						set {_chunks::%{_counter}%} to chunk at {_pos}
						add 1 to {_counter}
						add -16 to z-coordinate of {_pos}
			else if facing of player is east:
				loop 2 * {_radius} + 1 times:
					set x-coordinate of {_pos} to x-coordinate of {_center} + 16 * {_radius} - (loop-number - 1) * 16
					set z-coordinate of {_pos} to z-coordinate of {_center} - 16 * {_radius}
					loop 2 * {_radius} + 1 times:
						set {_chunks::%{_counter}%} to chunk at {_pos}
						add 1 to {_counter}
						add 16 to z-coordinate of {_pos}

			#comienzo  buscar enemigos
			#broadcast "%{_chunks::*}%"
			set {_cont} to 0
			set {_l1} to ""
			set {_l2} to ""
			set {_l3} to ""
			set {_l4} to ""
			set {_l5} to ""
			set {_l6} to ""
			set {_l7} to ""
			set {_l8} to ""
			set {_l9} to ""

			set {_1} to "&8*"
			set {_2} to "&8@"
			set {_3} to "&8!"
			set {_4} to "&8@"
			set {_6} to "&8$"
			set {_7} to "&8~"
			set {_8} to "&8^"
			set {_9} to "&8&"
			loop {_chunks::*}:
				set {_owner} to yaml value "Chunks.%loop-value%.owner" from file "./Factions/chunks.yml"
				if chunk at player's location is loop-value:
					set {_ico} to "&b+&f"	
				else if {_owner} isn't "<none>":
					if {_owner} is "&4WarZone":
						set {_ico} to "&4+"
					else:
						set {_F} to {_owner}
						if {_faction.%{_F}%.icon} isn't set:
							if {_1.used} isn't set:
								set {_ico} to {_1}
								set {_1.used} to {_F}
								set {_faction.%{_F}%.icon} to {_1}
							else if {_2.used} isn't set:
								set {_ico} to {_2}
								set {_2.used} to {_F}
								set {_faction.%{_F}%.icon} to {_2}

							else if {_3.used} isn't set:
								set {_ico} to {_3}
								set {_2.used} to {_F}
								set {_faction.%{_F}%.icon} to {_3}

							else if {_4.used} isn't set:
								set {_ico} to {_4}
								set {_4.used} to {_F}
								set {_faction.%{_F}%.icon} to {_4}

							else if {_5.used} isn't set:
								set {_ico} to {_5}
								set {_5.used} to {_F}
								set {_faction.%{_F}%.icon} to {_5}

							else if {_6.used} isn't set:
								set {_ico} to {_6}
								set {_6.used} to {_F}
								set {_faction.%{_F}%.icon} to {_6}

							else if {_7.used} isn't set:
								set {_ico} to {_7}
								set {_7.used} to {_F}
								set {_faction.%{_F}%.icon} to {_7}

							else if {_8.used} isn't set:
								set {_ico} to {_8}
								set {_8.used} to {_F}
								set {_faction.%{_F}%.icon} to {_8}

							else if {_9.used} isn't set:
								set {_ico} to {_9}
								set {_9.used} to {_F}
								set {_faction.%{_F}%.icon} to {_9}
						else:
							set {_ico} to {_faction.%{_F}%.icon}
					clear {_owner}
	
				else:
					set {_ico} to "&7-"
				if {_cont} is less than 9:
					set {_l1} to "%{_l1}% %{_ico}%"
					add 1 to {_cont}
				else if {_cont} is less than 18:
					set {_l2} to "%{_l2}% %{_ico}%"
					add 1 to {_cont}
				else if {_cont} is less than 27:
					set {_l3} to "%{_l3}% %{_ico}%"
					add 1 to {_cont}
				else if {_cont} is less than 36:
					set {_l4} to "%{_l4}% %{_ico}%"
					add 1 to {_cont}
				else if {_cont} is less than 45:
					set {_l5} to "%{_l5}% %{_ico}%"
					add 1 to {_cont}
				else if {_cont} is less than 54:
					set {_l6} to "%{_l6}% %{_ico}%"
					add 1 to {_cont}
				else if {_cont} is less than 63:
					set {_l7} to "%{_l7}% %{_ico}%"
					add 1 to {_cont}
				else if {_cont} is less than 72:
					set {_l8} to "%{_l8}% %{_ico}%"
					add 1 to {_cont}
				else if {_cont} is less than 81:
					set {_l9} to "%{_l9}% %{_ico}%"
					add 1 to {_cont}

			set {_n} to "N"
			set {_s} to "S"
			set {_e} to "E"
			set {_w} to "W"
			if facing of player is north:
				set {_n} to "&4N&6"
			else if facing of player is south:
				set {_s} to "&4S&6"
			else if facing of player is west:
				set {_w} to "&4W&6"
			else if facing of player is east:
				set {_e} to "&4E&6"
			set {_owner} to yaml value "Chunks.%chunk at player's location%.owner" from file "./Factions/chunks.yml"
			set {_encabezado} to "&6---------[&2%chunk at player's location%&6 %{_owner}% ]-----------"
			replace "chunk" in {_encabezado} with ""
			replace "of %player's world%" in {_encabezado} with ""
			replace "<none>" in {_encabezado} with "nobody"
			send "%{_encabezado}%"
			send "%{_l1}%"
			send "%{_l2}%"
			send "%{_l3}%"
			send "%{_l4}%    &6\%{_n}%/"
			send "%{_l5}%    &6%{_w}%+%{_e}%"
			send "%{_l6}%    &6/%{_s}%\"
			send "%{_l7}%"
			send "%{_l8}%"
			send "%{_l9}%"

			if {_1.used} is set:
				set {_l10} to "&8%{_1}% &9%{_1.used}%"

			if {_2.used} is set:
				set {_l10} to "%{_l10}% &f,%{_2}% &9%{_2.used}%"

			if {_3.used} is set:
				set {_l10} to "%{_l10}% &f,%{_3}% &9%{_3.used}%"

			if {_4.used} is set:
				set {_l10} to "%{_l10}% &f,%{_4}% &9%{_4.used}%"

			if {_5.used} is set:
				set {_l10} to "%{_l10}% &f,%{_5}% &9%{_5.used}%"

			if {_6.used} is set:
				set {_l10} to "%{_l10}% &f,%{_6}% &9%{_6.used}%"

			if {_7.used} is set:
				set {_l10} to "%{_l10}% &f,%{_7}% &9%{_7.used}%"

			if {_8.used} is set:
				set {_l10} to "%{_l10}% &f,%{_8}% &9%{_8.used}%"

			if {_9.used} is set:
				set {_l10} to "%{_l10}% &f,%{_9}% &9%{_9.used}%"
			if {_l10} is set:
				send "%{_l10}%"
			stop

		if arg-1 isn't set:
			send "&6--------------------------------------------"
			send "&9                     Forbidden HCF"
			send "&6--------------------------------------------"
			send "&9/f create    &2&l>>  &7Crea faction"
			send "&9/f show      &2&l>>  &7Informacion de la faction"
			send "&9/f tag        &2&l>>  &7Cambia el nombre de la faction"
			send "&9/f list         &2&l>>  &7Lista de factions"
			send "&9/f sethome  &2&l>>  &7Crea home de la faction"
			send " "
			send "&6-----------&9/f 2 &7para mas comandos&6-----------"
			stop

		if arg-1 isn't "create" or "officer" or "perms" or "truce" or "invite" or "deinvite" or "join" or "unclaim" or "claim" or "tag" or "sethome" or "show" or "who" or "home" or "leave" or "list" or "disband" or "mod" or "kick" or "owner" or "ally" or "neutral" or "c" or "chat " or "map" or "2" or "3":
			send "&6--------------------------------------------"
			send "&9                     Forbidden HCF"
			send "&6--------------------------------------------"
			send "&9/f create    &2&l>>  &7Crea faction"
			send "&9/f show      &2&l>>  &7Informacion de la faction"
			send "&9/f tag        &2&l>>  &7Cambia el nombre de la faction"
			send "&9/f list         &2&l>>  &7Lista de factions"
			send "&9/f sethome  &2&l>>  &7Crea home de la faction"
			send " "
			send "&6-----------&9/f 2 &7para mas comandos&6-----------"
			stop

		if arg-1 is "2":
			send "&6--------------------------------------------"
			send "&9               Forbidden HCF"
			send "&6--------------------------------------------"
			send "&9/f home     &2&l>>  &7Teleport al home de la faction"
			send "&9/f leave     &2&l>>  &7Sales de la faction"
			send "&9/f invite     &2&l>>  &7Invita un jugador a la faction"
			send "&9/f deinvite  &2&l>>  &7Cancela invitacion al jugador"
			send "&9/f claim      &2&l>>  &7Reclama un chunk"
			send " "
			send "&6-----------&9/f 3 &7para mas comandos&6-----------"
			stop

		if arg-1 is "3":
			send "&6--------------------------------------------"
			send "&9               Forbidden HCF"
			send "&6--------------------------------------------"
			send "&9/f unclaim  &2&l>>  &7Elimina territorio de faction"
			send "&9/f kick       &2&l>>  &7Quita un jugador de la faction"
			send "&9/f mod       &2&l>>  &7Da a un miembro rango de MOD"
			send "&9/f chat      &2&l>>  &7Cambias de chat"
			send "&9/f owner    &2&l>>  &7Cambias el dueño de una faction"
			send "&9/f officer"
			stop

command f-admin [<text>] [<text>] [<text>]:
	permission: skript.faction.admin
	trigger:
		if arg-1 is "disband":
			if arg-2 is set:
				set {_list::*} to yaml nodes "Faction" from file "./Factions/Factions.yml"
				if "%{_list::*}%" contains "%arg-2%":
					set {_F} to arg-2
					set {_ally::*} to yaml list "Faction.%{_F}%.relations.ally" from file "./Factions/Factions.yml"
					loop {_ally::*}:
						remove "%{_F}%" from yaml list "Faction.%loop-value%.relations.ally" from file "./Factions/Factions.yml"
						#Keep stuff clean
						remove "%{_F}%" from yaml list "Faction.%loop-value%.AllyPerm.interact" from file "./Factions/Factions.yml"
						remove "%{_F}%" from yaml list "Faction.%loop-value%.AllyPerm.sethome" from file "./Factions/Factions.yml"
						remove "%{_F}%" from yaml list "Faction.%loop-value%.AllyPerm.break" from file "./Factions/Factions.yml"
						remove "%{_F}%" from yaml list "Faction.%loop-value%.AllyPerm.chest" from file "./Factions/Factions.yml"
						remove "%{_F}%" from yaml list "Faction.%loop-value%.AllyPerm.build" from file "./Factions/Factions.yml"

					#break truce
					set {_truce::*} to yaml list "Faction.%{_F}%.relations.truce" from file "./Factions/Factions.yml"
					loop {_truce::*}:
						remove "%{_F}%" from yaml list "Faction.%loop-value%.relations.truce" from file "./Factions/Factions.yml"

					#Make member wilders
					set {_players::*} to yaml list "Faction.%{_F}%.players" from file "./Factions/Factions.yml"
					loop {_players::*}:
						set yaml value "Player.%loop-value%.faction" from file "./Factions/PlayerData.yml" to "wilder" 
						send "%{@Prefix}% &8Faction deleted by an admin" to player from uuid loop-value

					#clean the lands	
					set {_lands::*} to yaml list "Faction.%{_F}%.lands" from file "./Factions/Factions.yml"
					loop {_lands::*}:
						delete yaml nodes "Chunks.%loop-value%" from file "./Factions/chunks.yml"

					#Remove the node	
					delete yaml nodes "Faction.%{_F}%" from file "./Factions/Factions.yml"

					FactionTag(player's location)
					send "%{@Prefix}% &8Faction deleted"
					stop
				else:
					send "%{@Prefix}% &8 That faction does not exist"
					stop
						
		if arg-1 is "refreshtag":
			FactionTag(player's location)
			stop

		if arg-1 isn't set:
			send "&6--------------------------------------------"
			send "&9                     Forbidden HCF"
			send "&6--------------------------------------------"
			send "&9/f-admin disband    &2&l>>  &7Disband a faction"
			send "&9/f-admin refreshtag &2&l>> &7Refresh the players tag"
			send "&6---------------------------------------------------"
			stop

		if arg-1 isn't "disband" or "refreshtag":
			send "&6--------------------------------------------"
			send "&9                     Forbidden HCF"
			send "&6--------------------------------------------"
			send "&9/f-admin disband    &2&l>>  &7Disband a faction"
			send "&9/f-admin refreshtag &2&l>> &7Refresh the players tag"
			send "&6----------------------------------------------------"
			stop

command f-warzone [<integer>]:
	permission: skript.faction.admin
	trigger:
		if arg-1 is set:
			set {_center} to player's location#location you want to loop the chunks around
			set {_radius} to arg-1#radius (in chunks), if it is set to 0 it returns only the chunk at {_center}
			set {_pos} to {_center}
			send ""
			send ""
			send ""
			send "%{@Prefix}% &C&lWAIT UNTIL THE DONE MESSAGE APPEARS!!!!"
			send ""
			send ""
			send ""
			loop 2 * {_radius} + 1 times:
				set x-coordinate of {_pos} to x-coordinate of {_center} - 16 * {_radius} + (loop-number - 1) * 16
				set z-coordinate of {_pos} to z-coordinate of {_center} - 16 * {_radius}
				loop 2 * {_radius} + 1 times:
					set {_chunks::%{_pos}%} to chunk at {_pos}
					add 16 to z-coordinate of {_pos}
			#If the land is claimed by another faction or the warzone it self, I won't claim it, you will need to use /f-wilderness
			set {_cont} to 0
			set {_protectedchunks::*} to yaml nodes "Chunks" from file "./Factions/Factions.yml"
			loop {_chunks::*}:
				if {_protectedchunks::*} contains loop-value:
					set {_owner} to yaml value "Chunks.%loop-value%.owner" from file "./Factions/Chunks.yml"
					send "%{@Prefix}% &7The chunk %loop-value-1% is claimed by %{_owner}%, use /f-admin unclaim"
					send "%{@Prefix}% &8This one won't be claimed as warzone"
				else:
					set yaml value "Chunks.%loop-value%.owner" from file "./Factions/Chunks.yml" to "&4WarZone"
					add loop-value to yaml list "Factions.WarZone.lands" from file "./Factions/Factions.yml"
			send ""
			send ""
			send ""
			send "%{@Prefix}% &2&l>>>    Done!    <<<"
			send ""
			send ""
			send ""
			stop
		else:
			set {_protectedchunks::*} to yaml nodes "Chunks" from file "./Factions/Factions.yml"
			if {_protectedchunks::*} contains chunk at player's location:
				set {_owner} to yaml value "Chunks.%chunk at player's location%.owner" from file "./Factions/Chunks.yml"
				send "%{@Prefix}% &8This chunk is claimed by %{_owner}%"
				stop
			else:
				set yaml value "Chunks.%chunk at player's location%.owner" from file "./Factions/Chunks.yml" to "&4WarZone"
				add chunk at player's location to yaml list "Factions.WarZone.lands" from file "./Factions/Factions.yml"
				send "%{@Prefix}% &8This chunk is now a &4warzone"
				stop

command f-wilderness [<integer>]:
	permission: skript.factions.admin
	trigger:
		if arg-1 is set:
			set {_center} to player's location#location you want to loop the chunks around
			set {_radius} to arg-1#radius (in chunks), if it is set to 0 it returns only the chunk at {_center}
			set {_pos} to {_center}
			loop 2 * {_radius} + 1 times:
				set x-coordinate of {_pos} to x-coordinate of {_center} - 16 * {_radius} + (loop-number - 1) * 16
				set z-coordinate of {_pos} to z-coordinate of {_center} - 16 * {_radius}
				loop 2 * {_radius} + 1 times:
					add 16 to z-coordinate of {_pos}
			#If there are some lands claimed, lets unclaim them
			loop {_chunks::*}:
				set {_protectedchunks::*} to yaml nodes "Chunks" from file "./Factions/Chunks.yml"
				if {_protectedchunks::*} contains loop-value:
					set {_F} to yaml value "Chunks.%loop-value%.owner" from file "./Factions/Chunks.yml"
					remove loop-value from yaml list "Factions.%{_F}%.lands" from file "./Factions/Factions.yml"
					delete yaml nodes "Chunks.%loop-value%" from file "./Factions/Chunks.yml"
			send "%{@Prefix}% &8All the chunks in a radius of %arg-1%, were deleted"
			stop
		else:
			set {_chunk} to chunk at player's location
			set {_protectedchunks::*} to yaml nodes "Chunks" from file "./Factions/Chunks.yml"
			if {_protectedchunks::*} contains chunk at player's location:
				set {_F} to yaml value "Chunks.%chunk at player's location%.owner" from file "./Factions/Chunks.yml"
				remove chunk at player's location from yaml list "Factions.%{_F}%.lands" from file "./Factions/Factions.yml"
				delete yaml nodes "Chunks.%chunk at player's location%" from file "./Factions/Chunks.yml"
				send "%{@Prefix}% &8 You unclaimed this chunk"
				stop
			else:
				send "%{@Prefix}% &8Use this on a claimed land"
				stop

#Saving some user data				
on join:
	#Default Channel
	if {x_factions_FAC::chat::%uuid of player%} isn't set:
		set {x_factions_FAC::chat::%uuid of player%} to "p"
	#Correct tgag
	FactionTag(player's location)
	set yaml value "player2uuid.%player%" from file "./Factions/player2uuid.yml" to "%uuid of player%"
	set yaml value "uuid2player.%uuid of player%" from file "./Factions/uuid2player.yml" to "%player%"
	set {_uuid::*} to yaml nodes "Player" from file "./Factions/PlayerData.yml"
	if "%{_uuid::*}%" contains "%uuid of player%":
		stop
	else:
		set yaml value "Player.%uuid of player%" from file "./Factions/PlayerData.yml" to "%uuid of player%"
		set yaml value "Player.%uuid of player%.faction" from file "./Factions/PlayerData.yml" to "wilder"

every 10 tick:
	set {_protectedchunks::*} to yaml nodes "Chunks" from file "./Factions/Factions.yml"
	loop all players:
		set {_chunk} to chunk at loop-player's location
		set {_uuid} to uuid of loop-player	
		if "%{_protectedchunks::*}%" contains "%chunk at loop-player's location%":
			if {x_factions_FAC::notify::%{_uuid}%.notificado_entrada} isn't set:
				set {_owner} to yaml value "Chunks.%chunk at loop-player's location%.owner" from file "./Factions/Chunks.yml" 
				send "&cEntering &a%{_owner}%" to loop-player
				set {x_factions_FAC::notify::%{_uuid}%.notificado_entrada} to true
				set {x_factions_FAC::notify::%{_uuid}%.lastland} to {_owner}
				delete {x_factions_FAC::notify::%{_uuid}%.notificado_salida}
		else:
			if {x_factions_FAC::notify::%{_uuid}%.notificado_salida} isn't set:
				delete {x_factions_FAC::notify::%{_uuid}%.notificado_entrada}
				if {x_factions_FAC::notify::%{_uuid}%.lastland} is set:
					send "&cLeaving &a %{x_factions_FAC::notify::%{_uuid}%.lastland}%" to loop-player
				set {x_factions_FAC::notify::%{_uuid}%.notificado_salida} to true

every 1 minute:
	set {_list::*} to yaml nodes "Faction" from file "./Factions/Factions.yml"
	loop {_list::*}:
		set {_F} to loop-value	
		set {_freeze} to yaml value "Faction.%{_F}%.freeze" from file "./Factions/Factions.yml"
		set {_unix} to unix time
		if {_freeze} < {_unix}:
			set {_players::*} to yaml list "Faction.%{_F}%.players" from file "./Factions/Factions.yml"
			set {_size} to size of {_players::*}
			if {_size} > 1:
				set {_maxfactiondtr} to ({_size} - 1) * {@player-dtr} + {@solo-faction}
				set {_dtr} to yaml value "Faction.%{_F}%.dtr" from file "./Factions/Factions.yml"
				if {_dtr}<{_maxfactiondtr}:
					set {_adddtr} to ({_size}*{@minute-dtr})+{_dtr}
					set yaml value "Faction.%{_F}%.dtr" from file "./Factions/Factions.yml" to {_adddtr}
				else:
					set yaml value "Faction.%{_F}%.dtr" from file "./Factions/Factions.yml" to {_maxfactiondtr}
			else:
				set {_dtr} to yaml value "Faction.%{_F}%.dtr" from file "./Factions/Factions.yml"
				set {_maxfactiondtr} to {@solo-faction}
				if {_dtr}<{_maxfactiondtr}:
					set {_adddtr} to ({_size}*{@minute-dtr})+{_dtr}
					set yaml value "Faction.%{_F}%.dtr" from file "./Factions/Factions.yml" to {_adddtr}
				else:
					set yaml value "Faction.%{_F}%.dtr" from file "./Factions/Factions.yml" to {@solo-faction}				
		#remove the raid effect if the faction has more than 0 dtr
		FactionDtr("%{_F}%")	

on damage of player:
	if attacker is a player:
		#bypass damage by enderpearl
		if damage was caused by fall:
			if attacker is victim:
				stop
		set {_AttackerFaction} to yaml value "Player.%uuid of attacker%.faction" from file "./Factions/PlayerData.yml" 
		set {_VictimFaction} to yaml value "Player.%uuid of victim%.faction" from file "./Factions/PlayerData.yml" 
		if {_AttackerFaction} isn't "wilder":
			if {@faction-fire} is false:
				if {_VictimFaction} is {_AttackerFaction}:
					send "%{@Prefix}% &2%victim% &7is part of your faction" to attacker
					cancel event
					stop
			if {@ally-fire} is false:
				set {_Ally::*} to yaml list "Faction.%{_AttackerFaction}%.relations.ally" from file "./Factions/Factions.yml"
				if {_Ally::*} contains {_VictimFaction}:
					#This will spam a lot in massive pvp:
					#send "%{@Prefix}% &d%victim% &7is part of your ally" to attacker
					cancel event
					stop
			if {@truce-fire} is false:
				set {_truce::*} to yaml list "Faction.%{_AttackerFaction}%.relations.truce" from file "./Factions/Factions.yml"
				if {_truce::*} contains {_VictimFaction}:
					#This will spam a lot in massive pvp:
					#send "%{@Prefix}% &d%victim% &7you have a truce with them" to attacker
					cancel event
					stop

#APPLY DTR FREEZE IF PLAYER HAS NO FACTION
on death of player:
	set {_VictimFaction} to yaml value "Player.%uuid of player%.faction" from file "./Factions/PlayerData.yml" 
	if {_VictimFaction} isn't "wilder":
		set {_dtr} to yaml value "Faction.%{_VictimFaction}%.dtr" from file "./Factions/Factions.yml"
		set {_dtr} to {_dtr}-1
		if {_dtr} < -5.5:
			set yaml value "Faction.%{_VictimFaction}%.dtr" from file "./Factions/Factions.yml" to {@min-dtr}
		else:
			set yaml value "Faction.%{_VictimFaction}%.dtr" from file "./Factions/Factions.yml" to {_dtr}

		set {_unix} to unix time
		add {@dtr-freeze} to {_unix}
		set yaml value "Faction.%{_VictimFaction}%.freeze" from file "./Factions/Factions.yml" to {_unix}
		FactionDtr("%{_VictimFaction}%")

on right click on {@I}:
	if player has the permission "sk.faction.interact":
		stop
	if world of event-location is {@W}:
		set {_chunk} to chunk at event-block's location
		set {_F} to yaml value "Player.%uuid of player%.faction" from file "./Factions/PlayerData.yml" 
		set {_protectedchunks::*} to yaml nodes "Chunks" from file "./Factions/Chunks.yml"
		if "%{_protectedchunks::*}%" contains "%chunk at player's location%":
			set {_owner} to yaml value "Chunks.%chunk at player's location%.owner" from file "./Factions/Chunks.yml" 
			if {_owner} is "&4WarZone":
				cancel event
				send "%{@Prefix}%&7 You can't do that!"
				stop
			set {_raidstatus} to yaml value "Faction.%{_owner}%.raideable" from file "./Factions/Factions.yml" 
			if {_raidstatus} is false:
				set {_allybreak::*} to  yaml list "Faction.%{_owner}%.AllyPerm.break" from file "./Factions/Factions.yml"
				if "%{_F}%" isn't "%{_owner}%":
					if "%{_allybreak::*}%" contains "%{_F}%":
						stop
					else:
						cancel event
						send "%{@Prefix}%&7 You can't do that!"
						stop

on right click on {@stash}:
	if player has the permission "sk.faction.stash":
		stop
	if world of event-location is {@W}:
		set {_chunk} to chunk at event-block's location
		set {_F} to yaml value "Player.%uuid of player%.faction" from file "./Factions/PlayerData.yml" 
		set {_protectedchunks::*} to yaml nodes "Chunks" from file "./Factions/Chunks.yml"
		if "%{_protectedchunks::*}%" contains "%chunk at player's location%":
			set {_owner} to yaml value "Chunks.%chunk at player's location%.owner" from file "./Factions/Chunks.yml" 
			if {_owner} is "&4WarZone":
				cancel event
				send "%{@Prefix}%&7 You can't do that!"
				stop
			set {_raidstatus} to yaml value "Faction.%{_owner}%.raideable" from file "./Factions/Factions.yml" 
			if {_raidstatus} is false:
				set {_allybreak::*} to  yaml list "Faction.%{_owner}%.AllyPerm.chest" from file "./Factions/Factions.yml"
				if "%{_F}%" isn't "%{_owner}%":
					if "%{_allybreak::*}%" contains "%{_F}%":
						stop
					else:
						cancel event
						send "%{@Prefix}%&7 You can't do that!"
						stop		
				set {_officers::*} to yaml list "Faction.%{_owner}%.officers" from file "./Factions/Factions.yml"
				if "%{_officers::*}%" contains "%uuid of player%":
					stop
				else if block in front of event-block is a sign:
					if line 1 of block  in front of event-block is "[officer]":
						send "<red>This chest is protected! Only Officers can open it!"
						cancel event			
					if line 2 of block  in front of  event-block is "[officer]":
						send "<red>This chest is protected! Only Officers can open it!"
						cancel event							
					if line 3 of block  in front of  event-block is "[officer]":
						send "<red>This chest is protected! Only Officers can open it!"
						cancel event			

On Break:
	if player has the permission "sk.faction.break":
		stop
	if world of event-location is {@W}:
		set {_chunk} to chunk at event-block's location
		set {_F} to yaml value "Player.%uuid of player%.faction" from file "./Factions/PlayerData.yml" 
		set {_protectedchunks::*} to yaml nodes "Chunks" from file "./Factions/Chunks.yml"
		if "%{_protectedchunks::*}%" contains "%chunk at player's location%":
			set {_owner} to yaml value "Chunks.%chunk at player's location%.owner" from file "./Factions/Chunks.yml" 
			if {_owner} is "&4WarZone":
				cancel event
				send "%{@Prefix}%&7 You can't do that!"
				stop
			set {_raidstatus} to yaml value "Faction.%{_owner}%.raideable" from file "./Factions/Factions.yml" 
			if {_raidstatus} is false:
				set {_allybreak::*} to  yaml list "Faction.%{_owner}%.AllyPerm.break" from file "./Factions/Factions.yml"
				if "%{_F}%" isn't "%{_owner}%":
					if "%{_allybreak::*}%" contains "%{_F}%":
						stop
					else:
						cancel event
						send "%{@Prefix}%&7 You can't do that!"
						stop
				set {_officers::*} to yaml list "Faction.%{_owner}%.officers" from file "./Factions/Factions.yml"
				if "%{_officers::*}%" contains "%uuid of player%":
					stop
				else:
					if event-block is a sign:
						if line 1 of event-block is "[officer]":
							send "<red>This chest is protected!"
							cancel event			
						if line 2 of event-block is "[officer]":
							send "<red>This chest is protected!"
							cancel event							
						if line 3 of event-block is "[officer]":
							send "<red>This chest is protected!"
							cancel event						
					if event-block is  {@stash}:
						if block in front of event-block is a sign:
							if line 1 of block  in front of  event-block is "[officer]":
								send "<red>This chest is protected!"
								cancel event			
							if line 2 of block  in front of  event-block is "[officer]":
								send "<red>This chest is protected!"
								cancel event							
							if line 3 of block  in front of  event-block is "[officer]":
								send "<red>This chest is protected!"
								cancel event

on place:
	if player has the permission "sk.faction.break":
		stop
	if world of event-location is {@W}:
		set {_chunk} to chunk at event-block's location
		set {_F} to yaml value "Player.%uuid of player%.faction" from file "./Factions/PlayerData.yml" 
		set {_protectedchunks::*} to yaml nodes "Chunks" from file "./Factions/Chunks.yml"
		if "%{_protectedchunks::*}%" contains "%chunk at player's location%":
			set {_owner} to yaml value "Chunks.%chunk at player's location%.owner" from file "./Factions/Chunks.yml" 
			if {_owner} is "&4WarZone":
				cancel event
				send "%{@Prefix}%&7 You can't do that!"
				stop
			set {_raidstatus} to yaml value "Faction.%{_owner}%.raideable" from file "./Factions/Factions.yml" 
			if {_raidstatus} is false:
				set {_allybreak::*} to  yaml list "Faction.%{_owner}%.AllyPerm.break" from file "./Factions/Factions.yml"
				if "%{_F}%" isn't "%{_owner}%":
					if "%{_allybreak::*}%" contains "%{_F}%":
						stop
					else:
						cancel event
						send "%{@Prefix}%&7 You can't do that!"
						stop

#PROTECT PRESSURE PLATE
on pressure plate:
	if player has the permission "sk.faction.break":
		stop
	if world of event-location is {@W}:
		set {_chunk} to chunk at event-block's location
		set {_F} to yaml value "Player.%uuid of player%.faction" from file "./Factions/PlayerData.yml" 
		set {_protectedchunks::*} to yaml nodes "Chunks" from file "./Factions/Chunks.yml"
		if "%{_protectedchunks::*}%" contains "%chunk at player's location%":
			set {_owner} to yaml value "Chunks.%chunk at player's location%.owner" from file "./Factions/Chunks.yml" 
			if {_owner} is "&4WarZone":
				cancel event
				send "%{@Prefix}%&7 You can't do that!"
				stop
			set {_raidstatus} to yaml value "Faction.%{_owner}%.raideable" from file "./Factions/Factions.yml" 
			if {_raidstatus} is false:
				set {_allybreak::*} to  yaml list "Faction.%{_owner}%.AllyPerm.break" from file "./Factions/Factions.yml"
				if "%{_F}%" isn't "%{_owner}%":
					if "%{_allybreak::*}%" contains "%{_F}%":
						stop
					else:
						cancel event
						send "%{@Prefix}%&7 You can't do that!"
						stop						
on crop trample:
	if player has the permission "sk.faction.crop":
		stop
	if world of event-location is {@W}:
		set {_chunk} to chunk at event-block's location
		set {_F} to yaml value "Player.%uuid of player%.faction" from file "./Factions/PlayerData.yml" 
		set {_protectedchunks::*} to yaml nodes "Chunks" from file "./Factions/Chunks.yml"
		if "%{_protectedchunks::*}%" contains "%chunk at player's location%":
			set {_owner} to yaml value "Chunks.%chunk at player's location%.owner" from file "./Factions/Chunks.yml" 
			if {_owner} is "&4WarZone":
				cancel event
				send "%{@Prefix}%&7 You can't do that!"
				stop
			set {_raidstatus} to yaml value "Faction.%{_owner}%.raideable" from file "./Factions/Factions.yml" 
			if {_raidstatus} is false:
				set {_allybreak::*} to  yaml list "Faction.%{_owner}%.AllyPerm.break" from file "./Factions/Factions.yml"
				if "%{_F}%" isn't "%{_owner}%":
					if "%{_allybreak::*}%" contains "%{_F}%":
						stop
					else:
						cancel event
						send "%{@Prefix}%&7 You can't do that!"
						stop
						
On Explode:
	if world of event-location is {@W}:
		set {_chunk} to chunk at event-location
		set {_protectedchunks::*} to yaml nodes "Chunks" from file "./Factions/Chunks.yml"
		if "%{_protectedchunks::*}%" contains "%{_chunk}%":
			set {_owner} to yaml value "Chunks.%{_chunk}%.owner" from file "./Factions/Chunks.yml" 
			if  {_chunkowner} is "&4WarZone":
				cancel event
				stop
			set {_raidstatus} to yaml value "Faction.%{_owner}%.raideable" from file "./Factions/Factions.yml" 
			if {_raidstatus} is true:
				cancel event
				stop

on enderman pickup:
	if world of event-location is {@W}:
		set {_chunk} to chunk at event-location
		set {_protectedchunks::*} to yaml nodes "Chunks" from file "./Factions/Chunks.yml"
		if "%{_protectedchunks::*}%" contains "%{_chunk}%":
			set {_owner} to yaml value "Chunks.%{_chunk}%.owner" from file "./Factions/Chunks.yml" 
			if  {_chunkowner} is "&4WarZone":
				cancel event
				stop
			set {_raidstatus} to yaml value "Faction.%{_owner}%.raideable" from file "./Factions/Factions.yml" 
			if {_raidstatus} is true:
				cancel event
				stop

On zombie breaking a door:
	if world of event-location is {@W}:
		set {_chunk} to chunk at event-location
		set {_protectedchunks::*} to yaml nodes "Chunks" from file "./Factions/Chunks.yml"
		if "%{_protectedchunks::*}%" contains "%{_chunk}%":
			set {_owner} to yaml value "Chunks.%{_chunk}%.owner" from file "./Factions/Chunks.yml" 
			if  {_chunkowner} is "&4WarZone":
				cancel event
				stop
			set {_raidstatus} to yaml value "Faction.%{_owner}%.raideable" from file "./Factions/Factions.yml" 
			if {_raidstatus} is true:
				cancel event
				stop

#FACTIONS CHAT
on chat:
	if {@ChatSystem} is true:
		if {x_factions_FAC::chat::%uuid of player%} isn't set:
			set {x_factions_FAC::chat::%uuid of player%} to "p"
		#Get player's faction
		set {_F} to yaml value "Player.%uuid of player%.faction" from file "./Factions/PlayerData.yml"
		if {_F} is "wilder":
			#Just to make sure, if a player is a wilder, he can't be in a faction chat.
			set {_F} to "-"
			set {x_factions_FAC::chat::%uuid of player%} to "p"
		# GLOBAL CHAT
		if "%{x_factions_FAC::chat::%uuid of player%}%" is "p":
			# IF YOU NEED SOME VIP OR MOD PREFIX
			# USE THIS SECTION
			#
			# if player has the permission "skript.chat.admin":
				# cancel event
				# broadcast "%{ADMIN}% &4%player%&9~: &c&l%message%"
				# stop
			# if player has the permission "skript.chat.mod":
				# cancel event
				# broadcast "%{MOD}%&9%player%: &3&l%message%"
				# stop
			# if player has the permission "skript.chat.somevip":
				# cancel event
				# broadcast "&6[&c%{_F}%&6] &2%player%&f: %message%"
				# stop
			cancel event
			broadcast "&6[&c%{_F}%&6] &a%player%&f: %message%"
			stop

		#FACTION CHAT
		if "%{x_factions_FAC::chat::%uuid of player%}%" is "f":
			cancel event
			set {_players::*} to yaml list "Faction.%{_F}%.players" from file "./Factions/Factions.yml"
			loop {_players::*}:
				send "&f<&2%{_F}% &2%player%&f>: &a%message%" to player from uuid loop-value
			stop

		# ALLY CHAT
		if "%{x_factions_FAC::chat::%uuid of player%}%" is "a":
			cancel event
			set {_players::*} to yaml list "Faction.%{_F}%.players" from file "./Factions/Factions.yml"
			set {_ally::*} to yaml list "Faction.%{_F}%.relations.ally" from file "./Factions/Factions.yml"
			loop {_ally::*}:
				set {_allyplayres::*} to yaml list "Faction.%loop-value-1%.players" from file "./Factions/Factions.yml"
				loop {_allyplayres::*}:
					send "&f<&d%{_F}% &d%player%&f>: &d%message%" to player from uuid loop-value-2
				clear {_allyplayres::*}
			loop {_players::*}:
				send "&f<&d%{_F}% &d%player%&f>: &d%message%" to player from uuid loop-value-1
			stop
		
